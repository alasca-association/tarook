- name: Configure k8s resources
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  become: no

  block:
  - name: Check that mon volume storage class exists
    k8s_info:
      kind: StorageClass
      name: "{{ rook_mon_volume_storage_class }}"
    when: "rook_mon_volume"
    register: mon_storage_class
    failed_when: "not mon_storage_class.resources"

  - name: Check that osd volume storage class exists
    k8s_info:
      kind: StorageClass
      name: "{{ rook_osd_storage_class }}"
    register: osd_storage_class
    failed_when: "not osd_storage_class.resources"

  - name: Create common resource definitions
    k8s:
      state: present
      apply: yes
      definition: "{{ lookup('template', 'common.yaml') }}"

  - name: Create the operator
    k8s:
      state: present
      apply: yes
      definition: "{{ lookup('template', 'operator.yaml') }}"

  - name: Create the cluster
    k8s:
      state: present
      apply: yes
      definition: "{{ lookup('template', 'cluster.yaml') }}"

  - name: Wait for cluster to become ready
    k8s_info:
      kind: CephCluster
      namespace: "{{ rook_namespace }}"
      name: "{{ rook_cluster_name }}"
    register: cluster_info
    until: |
      (cluster_info.resources | default(False) and (
        cluster_info.resources[0].status | default(False)
      ) and (
        cluster_info.resources[0].status.ceph | default(False)
      ) and
        (cluster_info.resources[0].status.ceph.health == 'HEALTH_OK' or
         cluster_info.resources[0].status.ceph.health == 'HEALTH_WARN') and
        cluster_info.resources[0].status.state == 'Created')
    delay: 10
    retries: 60

  - name: Wait for the first OSD to appear
    # we need the first OSD otherwise setting up pools will fail
    k8s_info:
      kind: Deployment
      namespace: "{{ rook_namespace }}"
      name: "{{ rook_cluster_name }}-osd-0"
    register: osd_info
    until: |
      osd_info.resources | default(False)  and (
        osd_info.resources[0].status | default(False)
      ) and (
        (osd_info.resources[0].status.readyReplicas | default(0)) > 0
      )
    delay: 2
    retries: 60

  - name: Setup toolbox
    k8s:
      state: "{{ rook_toolbox | ternary('present', 'absent') }}"
      apply: yes
      definition: "{{ lookup('template', 'toolbox.yaml') }}"

  - name: Create ceph pools
    k8s:
      state: present
      apply: yes
      definition: "{{ lookup('template', 'pool.yaml') }}"
    loop: "{{ rook_pools }}"

  - name: Create pool storage classes
    k8s:
      state: present
      apply: yes
      definition: "{{ lookup('template', 'block_storage_class.yaml') }}"
    when: "item.create_storage_class | default(False)"
    loop: "{{ rook_pools }}"

  - name: Create shared filesystem
    k8s:
      state: "{{ rook_fs | ternary('present', 'absent') }}"
      apply: yes
      definition: "{{ lookup('template', 'fs.yaml') }}"

  - name: Create shared filesystem storage class
    k8s:
      state: "{{ rook_fs | ternary('present', 'absent') }}"
      apply: yes
      definition: "{{ lookup('template', 'cephfs_storage_class.yaml') }}"
