apiVersion: "ceph.rook.io/v1"
kind: "CephCluster"
metadata:
  name: "{{ rook_cluster_name }}"
  namespace: "{{ rook_namespace }}"
spec:
  cephVersion:
    # see the "Cluster Settings" section below for more details on which image of ceph to run
    image: "ceph/ceph:v14.2.6"
  dataDirHostPath: /var/lib/rook
  mon:
    count: 3
    allowMultiplePerNode: {{ rook_mon_allow_multiple_per_node }}
{% if rook_mon_volume %}
    volumeClaimTemplate:
      spec:
        storageClassName: "{{ rook_mon_volume_storage_class }}"
        resources:
          requests:
            storage: "{{ rook_mon_volume_size }}"
{% endif %}
  mgr:
{% if rook_mgr_use_pg_autoscaler %}
    modules:
    - name: pg_autoscaler
      enabled: true
{% endif %}
  storage:
   storageClassDeviceSets:
    - name: cinder
      count: {{ rook_nosds }}
      portable: true
{% if rook_osd_anti_affinity or rook_placement_label or rook_placement_taint %}
      placement:
{% if rook_osd_anti_affinity %}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rook-ceph-osd
                - key: app
                  operator: In
                  values:
                  - rook-ceph-osd-prepare
              topologyKey: kubernetes.io/hostname
{% endif %}
{% if rook_placement_label %}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "{{ rook_placement_label.key }}"
                operator: In
                values:
                - "{{ rook_placement_label.value }}"
{% endif %}
{% if rook_placement_taint %}
        tolerations:
        - key: "{{ rook_placement_taint.key }}"
          value: "{{ rook_placement_taint.value }}"
          operator: Equal
          effect: "{{ rook_placement_taint.effect | default('NoSchedule') }}"
{% endif %}
{% endif %}
      resources: {}
      volumeClaimTemplates:
      - metadata:
          creationTimestamp: null
          name: ceph-data
        spec:
          resources:
            requests:
              storage: "{{ rook_osd_volume_size }}"
          storageClassName: "{{ rook_osd_storage_class }}"
          volumeMode: Block
          accessModes:
          - ReadWriteOnce
        status: {}
  removeOSDsIfOutAndSafeToRemove: {{ rook_osd_autodestroy_safe }}
{% if rook_placement_label or rook_placement_taint %}
  placement:
    all:
{% if rook_placement_label %}
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "{{ rook_placement_label.key }}"
              operator: In
              values:
              - "{{ rook_placement_label.value }}"
{% endif %}
{% if rook_placement_taint %}
      tolerations:
      - key: "{{ rook_placement_taint.key }}"
        value: "{{ rook_placement_taint.value }}"
        operator: Equal
        effect: "{{ rook_placement_taint.effect | default('NoSchedule') }}"
{% endif %}
{% endif %}

