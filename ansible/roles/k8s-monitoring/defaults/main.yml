---
monitoring: true
monitoring_namespace: 'monitoring'

monitoring_use_thanos: true
monitoring_thanos_objectstorage_auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
monitoring_thanos_objectstorage_username: "{{ lookup('env', 'OS_USERNAME') }}"
monitoring_thanos_objectstorage_user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
monitoring_thanos_objectstorage_project_name: "{{ lookup('env', 'OS_PROJECT_NAME') }}"
monitoring_thanos_objectstorage_project_domain_id: "{{ lookup('env', 'OS_PROJECT_DOMAIN_ID') }}"
monitoring_thanos_objectstorage_password: "{{ lookup('env', 'OS_PASSWORD') }}"
monitoring_thanos_objectstorage_region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"

monitoring_thanos_metadata_volume_size: 10Gi
monitoring_thanos_metadata_volume_storage_class: rook-ceph-data

monitoring_thanos_version: v0.12.2

monitoring_jsonnet_dir_monitoring: "{{ playbook_dir }}/../jsonnet-sources/monitoring"
monitoring_jsonnet_dir_thanos: "{{ playbook_dir }}/../jsonnet-sources/thanos"
monitoring_thanos_config_secret_name: thanos-objectstorage

monitoring_placement_label: False
monitoring_placement_taint: False

monitoring_prometheus_monitor_all_namespaces: True

monitoring_ch_global_monitoring_nodeport_name: ch-k8s-global-monitoring

monitoring_grafana_customer_dashboards: True
monitoring_grafana_customer_dashboards_configmap: grafana-customer-dashboards

monitoring_alertmanager_memory_limit: "256Mi"
monitoring_alertmanager_memory_request: "{{ monitoring_alertmanager_memory_limit }}"
monitoring_alertmanager_cpu_limit: "100m"
monitoring_alertmanager_cpu_request: "{{ monitoring_alertmanager_cpu_limit }}"

monitoring_alertmanager_config_secret: alertmanager-main

monitoring_prometheus_memory_limit: "3Gi"
monitoring_prometheus_memory_request: "{{ monitoring_prometheus_memory_limit }}"
monitoring_prometheus_cpu_limit: "1"
monitoring_prometheus_cpu_request: "{{ monitoring_prometheus_cpu_limit }}"

monitoring_grafana_memory_limit: "512Mi"
monitoring_grafana_memory_request: "256Mi"
monitoring_grafana_cpu_limit: "500m"
monitoring_grafana_cpu_request: "100m"
monitoring_grafana_version: "7.1.3"
monitoring_grafana_plugins: []

monitoring_kube_state_metrics_memory_limit: "128Mi"
monitoring_kube_state_metrics_memory_request: "50Mi"
monitoring_kube_state_metrics_cpu_limit: "50m"
monitoring_kube_state_metrics_cpu_request: "20m"

monitoring_thanos_sidecar_memory_limit: "256Mi"
monitoring_thanos_sidecar_memory_request: "{{ monitoring_thanos_sidecar_memory_limit }}"
monitoring_thanos_sidecar_cpu_limit: "500m"
monitoring_thanos_sidecar_cpu_request: "{{ monitoring_thanos_sidecar_cpu_limit }}"

monitoring_thanos_sidecar_version: "{{ monitoring_thanos_version }}"
# According to @tony.fiedler, the main memory consumer in the
# Thanos stack will be Store. Query is mainly a passthrough.
# Query will still need quite a bit of CPU though.
#
# These values are preliminary and subject to change.

monitoring_thanos_query_memory_limit: "786Mi"
monitoring_thanos_query_memory_request: "128Mi"
monitoring_thanos_query_cpu_limit: "1"
monitoring_thanos_query_cpu_request: "100m"

monitoring_thanos_store_memory_limit: "2Gi"
monitoring_thanos_store_memory_request: "256Mi"
monitoring_thanos_store_cpu_limit: "1"
monitoring_thanos_store_cpu_request: "100m"
