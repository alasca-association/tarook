- name: Install strongswan and tools
  become: yes
  apt:
    update_cache: yes
    name:
      - strongswan
      - strongswan-swanctl
      - charon-systemd
      - strongswan-pki
      - libcharon-extra-plugins
      - libstrongswan-extra-plugins 

- name: Create ipsec subdirectory in the inventory
  become: no
  delegate_to: localhost
  run_once: yes
  file:
    path: "{{ etc_dir }}/ipsec/"
    state: directory

- name: Check if a CA cert exists
  become: no
  delegate_to: localhost
  run_once: yes
  stat:
    path: "{{ etc_dir }}/ipsec/ca-cert.pem"
  register: ca

- name: Setup CA
  # TODO: use openssl instead of `pki`?
  become: no
  delegate_to: localhost
  run_once: yes
  when: not ca.stat.exists
  block:
    - name: Create CA key
      shell: "pki --gen --type rsa --size 4096 --outform pem > {{ etc_dir }}/ipsec/ca-key.pem"

    - name: Create CA cert
      shell: >
        pki --self --ca --lifetime 3650 --in {{ etc_dir }}/ipsec/ca-key.pem
        --type rsa --dn "CN=C&H VPN root CA" --outform pem > {{ etc_dir }}/ipsec/ca-cert.pem

- name: Setup Server Certificate
  become: no
  delegate_to: localhost
  run_once: yes
  when: not ca.stat.exists
  block:
    - name: Create Server key
      shell: "pki --gen --type rsa --size 4096 --outform pem > {{ etc_dir }}/ipsec/server-key.pem"

    - name: Create Server cert
      shell: >
        pki --pub --in {{ etc_dir }}/ipsec/server-key.pem --type rsa |
        pki --issue --lifetime 1825
        --cacert {{ etc_dir }}/ipsec/ca-cert.pem --cakey {{ etc_dir }}/ipsec/ca-key.pem
        --dn "CN={{ networking_floating_ip }}" --san @{{ networking_floating_ip }} --san {{ networking_floating_ip }}
        --flag serverAuth --flag ikeIntermediate --outform pem > {{ etc_dir }}/ipsec/server-cert.pem

- name: Copy certificate material to the gateways
  become: yes
  no_log: True
  diff: no
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: "{{ etc_dir }}/ipsec/ca-cert.pem"
      dest: "/etc/swanctl/x509ca/ca-cert.pem"
    - src: "{{ etc_dir }}/ipsec/ca-key.pem"
      dest: "/etc/swanctl/private/ca-key.pem"
    - src: "{{ etc_dir }}/ipsec/server-cert.pem"
      dest: "/etc/swanctl/x509/server-cert.pem"
    - src: "{{ etc_dir }}/ipsec/server-key.pem"
      dest: "/etc/swanctl/private/server-key.pem"

- name: Copy swanctl.conf
  become: yes
  template:
    src: swanctl.conf.j2
    dest: /etc/swanctl/swanctl.conf

- name: Copy charon-systemd.conf
  become: yes
  copy:
    src: charon-systemd.conf
    dest: /etc/strongswan.d/charon-systemd.conf

- name: Prepare workstation as client
  become: no
  run_once: yes
  block:
    - name: Create swanctl.conf
      delegate_to: localhost
      template:
        src: swanctl.conf.client.j2
        dest: "{{ etc_dir }}/ipsec/swanctl.conf"
    - name: Create charon-systemd.conf
      delegate_to: localhost
      copy:
        src: charon-systemd.conf
        dest: "{{ etc_dir }}/ipsec/charon-systemd.conf"

- name: Start strongswan
  become: yes
  systemd:
    name: strongswan-swanctl
    state: restarted
    enabled: yes

- name: Configure bird
  become: yes
  template:
    src: bird.conf
    dest: /etc/bird.d/10-ipsec-vpn.conf
    owner: root
    group: bird
    mode: "u=rw,g=r,o-rwx"
  notify: restart bird

- name: Configure nftables
  become: yes
  template:
    src: nftables.conf
    dest: /etc/nft.d/10-ipsec-vpn.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o-rwx"
  notify: reload nftables
