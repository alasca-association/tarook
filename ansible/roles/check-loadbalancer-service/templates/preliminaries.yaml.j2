---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test
  namespace: "{{ check_loadbalancer_service_namespace }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-psp
  namespace: "{{ check_loadbalancer_service_namespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:cah-too-permissive
subjects:
- kind: ServiceAccount
  name: test
  namespace: "{{ check_loadbalancer_service_namespace }}"
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: cah-too-permissive
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - SYS_ADMIN
  fsGroup:
    rule: RunAsAny
  hostIPC: true
  hostNetwork: true
  hostPID: true
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - secret
  - projected
  - hostPath
  - flexVolume
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
   name: psp:cah-too-permissive
   namespace: "{{ check_loadbalancer_service_namespace }}"
rules:
- apiGroups:
  - policy
  resourceNames:
  - cah-too-permissive
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-deployment
  namespace: "{{ check_loadbalancer_service_namespace }}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo
        ports:
        - containerPort: 80
      serviceAccountName: test
