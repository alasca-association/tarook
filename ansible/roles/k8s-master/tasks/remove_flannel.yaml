---
- name: Check presence of flannel
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  k8s_info:
    api_version: apps/v1
    namespace: kube-system
    kind: DaemonSet
    label_selectors:
    - app=flannel
  register: flannel_ds

- name: Fail if disruptions are not allowed
  fail:
    msg: Would have to remove flannel, but disruptions are not allowed.
  when: flannel_ds.resources and not _allow_disruption

- name: Delete k8s resources of flannel
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  block:
  - name: Delete flannel daemonsets
    k8s:
      state: absent
      api_version: apps/v1
      namespace: kube-system
      kind: DaemonSet
      name: "{{ item.metadata.name }}"
      validate:
        fail_on_error: yes
        strict: yes
    loop: "{{ flannel_ds.resources }}"
  - name: Wait for flannel pods to be gone
    k8s_info:
      api_version: v1
      namespace: kube-system
      kind: Pod
      label_selectors:
      - app=flannel
    register: flannel_pods
    until: "'resources' in flannel_pods and not flannel_pods.resources"
    retries: 60
    delay: 3
  - name: Remove flannel overlay network
    k8s:
      definition: "{{ lookup('file', 'kube-flannel.yaml') }}"
      state: "absent"
      wait: yes
      validate:
        fail_on_error: yes
        strict: yes

- name: Remove flannel config from k8s nodes
  delegate_to: "{{ item }}"
  loop: "{{ groups['k8s_nodes'] }}"
  become: yes
  run_once: yes
  file:
    path: /etc/cni/net.d/10-flannel.conflist
    state: absent
  register: flannel_config

- name: Restart kubelet # noqa no-handler
  delegate_to: "{{ item.item }}"
  loop: "{{ flannel_config.results }}"
  become: yes
  run_once: yes
  service:
    name: kubelet
    state: restarted
  when: item is changed

- name: Clean flannel devices
  delegate_to: "{{ item[0] }}"
  loop: "{{ groups['k8s_nodes'] | product(['cni0', 'flannel.1']) | list }}"
  become: yes
  run_once: yes
  shell: |
    set -e
    if ip link show dev {{ item[1] | quote }}; then
      ip link del {{ item[1] | quote }}
      exit 120
    fi
  register: flannel_dev
  failed_when: flannel_dev.rc != 0 and flannel_dev.rc != 120
  changed_when: flannel_dev.rc == 120
