---
- name: Run the test
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  block:
  - name: discover IP address of prometheus service
    k8s_info:
      namespace: monitoring
      name: prometheus-k8s
      api_version: v1
      kind: Service
    register: prometheus_service
    failed_when: |
      not ((prometheus_service.resources | default(False))
        and (prometheus_service.resources[0].spec | default(False))
        and (prometheus_service.resources[0].spec.clusterIP | default(False))
      )

  - name: set cluster IP fact
    set_fact:
      prometheus_cluster_ip: "{{ prometheus_service.resources[0].spec.clusterIP }}"

  - name: information about config
    debug:
      msg: "This test is using the prometheus at {{ prometheus_cluster_ip }}:9090"

  - name: check node exporter scrape endpoint status
    uri:
      url: 'http://{{ prometheus_cluster_ip }}:9090/api/v1/query?query=up{job="node-exporter",instance={{ item | to_json }}}'
      return_content: true
    register: metrics
    loop: "{{ groups['k8s_nodes'] }}"
    until: |
      metrics.failed == false and
      metrics.status == 200 and
      metrics.json.data | json_query('result[0].value | [1]') == '1'
    retries: 25
    delay: 3

  - name: check keepalived exporter scrape endpoint status
    uri:
      url: 'http://{{ prometheus_cluster_ip }}:9090/api/v1/query?query=up{job="prometheus-keepalived",instance="{{ hostvars[item]["local_ipv4_address"] }}:9650"}'
      return_content: true
    register: metrics
    loop: "{{ groups['frontend'] }}"
    until: |
      metrics.failed == false and
      metrics.status == 200 and
      metrics.json.data | json_query('result[0].value | [1]') == '1'
    retries: 25
    delay: 3

  - name: check haproxy exporter scrape endpoint status
    uri:
      url: 'http://{{ prometheus_cluster_ip }}:9090/api/v1/query?query=up{job="prometheus-haproxy",instance="{{ hostvars[item]["local_ipv4_address"] }}:9101"}'
      return_content: true
    register: metrics
    loop: "{{ groups['frontend'] }}"
    until: |
      metrics.failed == false and
      metrics.status == 200 and
      metrics.json.data | json_query('result[0].value | [1]') == '1'
    retries: 25
    delay: 3

  - name: check ceph mgr scrape endpoint status
    uri:
      url: 'http://{{ prometheus_cluster_ip }}:9090/api/v1/query?query=up{job="rook-ceph-mgr"}'
      return_content: true
    register: metrics
    when: "k8s_storage_rook_enabled"
    until: |
      metrics.failed == false and
      metrics.status == 200 and
      metrics.json.data | json_query('result[0].value | [1]') == '1'
    retries: 25
    delay: 3

  - name: check LBaaS controller scrape endpoint status
    uri:
      url: 'http://{{ prometheus_cluster_ip }}:9090/api/v1/query?query=up{job="ch-k8s-lbaas-controller"}'
      return_content: true
    register: metrics
    when: "ch_k8s_lbaas_enabled | default(False)"
    until: |
      metrics.failed == false and
      metrics.status == 200 and
      metrics.json.data | json_query('result[0].value | [1]') == '1'
    retries: 25
    delay: 3

  - name: check LBaaS agent scrape endpoint status
    uri:
      url: 'http://{{ prometheus_cluster_ip }}:9090/api/v1/query?query=up{job="ch-k8s-lbaas-agent",instance="{{ hostvars[item]["local_ipv4_address"] }}:{{ ch_k8s_lbaas_agent_port }}"}'
      return_content: true
    register: metrics
    when: "ch_k8s_lbaas_enabled | default(False)"
    loop: "{{ groups['frontend'] }}"
    until: |
      metrics.failed == false and
      metrics.status == 200 and
      metrics.json.data | json_query('result[0].value | [1]') == '1'
    retries: 25
    delay: 3
