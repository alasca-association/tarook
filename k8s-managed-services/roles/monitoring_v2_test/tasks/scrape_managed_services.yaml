- name: Check keepalived exporter scrape endpoint status
  community.kubernetes.k8s_exec:
    namespace: "{{ check_prometheus_scraping_namespace }}"
    pod: prometheus-test-scraper
    command: curl -g 'http://{{ prometheus_cluster_ip }}:{{ prometheus_web_port }}/api/v1/query?query=up{job="prometheus-keepalived",instance="{{ hostvars[item]["local_ipv4_address"] }}:9650"}'
  register: metrics
  loop: "{{ groups['frontend'] }}"
  until: |
    metrics.failed == false and
    metrics.return_code == 0 and
    metrics.stdout | from_json | json_query('status') == "success" and
    metrics.stdout | from_json | json_query('data.result[0].value | [1]') == '1'
  retries: 60
  delay: 3

- name: Check HAProxy exporter scrape endpoint status
  community.kubernetes.k8s_exec:
    namespace: "{{ check_prometheus_scraping_namespace }}"
    pod: prometheus-test-scraper
    command: curl -g 'http://{{ prometheus_cluster_ip }}:{{ prometheus_web_port }}/api/v1/query?query=up{job="prometheus-haproxy",instance="{{ hostvars[item]["local_ipv4_address"] }}:9101"}'
  register: metrics
  loop: "{{ groups['frontend'] }}"
  until: |
    metrics.failed == false and
    metrics.return_code == 0 and
    metrics.stdout | from_json | json_query('status') == "success" and
    metrics.stdout | from_json | json_query('data.result[0].value | [1]') == '1'
  retries: 60
  delay: 3

- name: Check ceph mgr scrape endpoint status
  community.kubernetes.k8s_exec:
      namespace: "{{ check_prometheus_scraping_namespace }}"
      pod: prometheus-test-scraper
      command: curl -g 'http://{{ prometheus_cluster_ip }}:{{ prometheus_web_port }}/api/v1/query?query=up{job="rook-ceph-mgr"}'
  register: metrics
  when: "k8s_storage_rook_enabled"
  until: |
    metrics.failed == false and
    metrics.return_code == 0 and
    metrics.stdout | from_json | json_query('status') == "success" and
    metrics.stdout | from_json | json_query('data.result[0].value | [1]') == '1'
  retries: 60
  delay: 3

- name: Check ch-k8s-lbaas
  when: ch_k8s_lbaas_enabled
  block:
  - name: Check LBaaS controller scrape endpoint status
    community.kubernetes.k8s_exec:
      namespace: "{{ check_prometheus_scraping_namespace }}"
      pod: prometheus-test-scraper
      command: curl -g 'http://{{ prometheus_cluster_ip }}:{{ prometheus_web_port }}/api/v1/query?query=up{job="ch-k8s-lbaas-controller"}'
    register: metrics
    until: |
      metrics.failed == false and
      metrics.return_code == 0 and
      metrics.stdout | from_json | json_query('status') == "success" and
      metrics.stdout | from_json | json_query('data.result[0].value | [1]') == '1'
    retries: 60
    delay: 3

  - name: Check LBaaS agent scrape endpoint status
    community.kubernetes.k8s_exec:
      namespace: "{{ check_prometheus_scraping_namespace }}"
      pod: prometheus-test-scraper
      command: curl -g 'http://{{ prometheus_cluster_ip }}:{{ prometheus_web_port }}/api/v1/query?query=up{job="ch-k8s-lbaas-agent",instance="{{ hostvars[item]["local_ipv4_address"] }}:{{ ch_k8s_lbaas_agent_port }}"}'
    register: metrics
    loop: "{{ groups['frontend'] }}"
    until: |
      metrics.failed == false and
      metrics.return_code == 0 and
      metrics.stdout | from_json | json_query('status') == "success" and
      metrics.stdout | from_json | json_query('data.result[0].value | [1]') == '1'
    retries: 60
    delay: 3

- name: Check node-exporter (frontend) endpoint status
  community.kubernetes.k8s_exec:
    namespace: "{{ check_prometheus_scraping_namespace }}"
    pod: prometheus-test-scraper
    command: curl -g 'http://{{ prometheus_cluster_ip }}:{{ prometheus_web_port }}/api/v1/query?query=up{job="prometheus-frontend-node-exporter",instance="{{ hostvars[item]["local_ipv4_address"] }}:9100"}'
  register: metrics
  loop: "{{ groups['frontend'] }}"
  until: |
    metrics.failed == false and
    metrics.return_code == 0 and
    metrics.stdout | from_json | json_query('status') == "success" and
    metrics.stdout | from_json | json_query('data.result[0].value | [1]') == '1'
  retries: 60
  delay: 3
