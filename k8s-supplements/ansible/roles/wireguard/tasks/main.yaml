---
- name: Ensure private key consistency
  become: true
  any_errors_fatal: true
  block:
    - name: Check for existence of private key in old location (LEGACY)
      ansible.builtin.stat:
        path: /etc/wireguard/wg_gw.key
      register: wg_gw
    - name: Fail if the key exists (LEGACY)
      ansible.builtin.fail:
        msg: |
          This task fails because we changed the handling of the wireguard key of the gateway.
          The key is now stored locally in the inventory and not on the gateways.
          To avoid voodoo synchronization, manual intervention is required.
          1.) Copy the private wireguard key file of the gateway (/etc/wireguard/wg_gw.key) to your local inventory {{ etc_dir }}/wg_gw_priv.key.
          2.) Remove the key file (/etc/wireguard/wg_gw.key) from all gateways.
          3.) Re-run the playbook
          This task is only relevant for existing clusters.
      when: "wg_gw.stat.exists"

- name: Remove old service
  become: true
  ansible.builtin.file:
    path: /etc/systemd/system/wireguard.service
    state: absent
  register: old_wg_service

- name: Stop and disable old wireguard service  # noqa no-handler
  become: true
  ansible.builtin.service:
    name: wireguard.service
    state: stopped
    enabled: false
  when: old_wg_service is changed

- name: Reload systemd to drop old wireguard service  # noqa no-handler
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
  when: old_wg_service is changed

- name: Stop wg0 after removal of legacy service so that the new service can take over  # noqa no-handler no-changed-when
  become: true
  ansible.builtin.command:
  args:
    argv: ['wg-quick', 'down', 'wg0']
  when: old_wg_service is changed

- name: Setup wireguard endpoints
  loop: "{{ wg_endpoints }}"
  ansible.builtin.include_tasks: "wg_endpoint.yaml"
  loop_control:
    loop_var: endpoint

- name: Deploy bird configuration for wireguard routes
  become: true
  block:
    - name: Ensure that drop-in directory for bird configs exist (IPv4)
      ansible.builtin.file:
        path: /etc/bird.d/
        state: directory
        owner: root
        group: bird
        mode: 0750
      when: ipv4_enabled

    - name: Ensure that drop-in directory for bird configs exist (IPv6)
      ansible.builtin.file:
        path: /etc/birdv6.d/
        state: directory
        owner: root
        group: bird
        mode: 0750
      when: ipv6_enabled

    - name: Create bird config for IPv4 wireguard routes
      ansible.builtin.template:
        src: wg_bird.conf.j2
        dest: /etc/bird.d/00-wireguard.conf
        owner: bird
        group: bird
        mode: 0640
      notify: restart bird
      when: ipv4_enabled

    - name: Create bird config for IPv6 wireguard routes
      ansible.builtin.template:
        src: wg_bird_v6.conf.j2
        dest: /etc/birdv6.d/00-wireguard.conf
        owner: bird
        group: bird
        mode: 06400
      when: ipv6_enabled
      notify: restart bird6
...
