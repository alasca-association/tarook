{{ _auto_generated_preamble }}

# net-base hosts the default configuration that is inherited by other CHILD_SAs in the
# 'children {}' section below.
net-base {
    esp_proposals = {{ ipsec_esp_proposals | join(", ") }}
    dpd_action = restart
    start_action = trap
    local_ts = {{ ipsec_local_networks | join(", ") }}
}

connections {

    rw-eap {
        {# Use the public VIP to communicate with the remote endpoint instead
           of exposing our own public ip -#}
        local_addrs = {{ networking_fixed_ip }}
{% if ipsec_remote_addrs %}
        remote_addrs = {{ ipsec_remote_addrs | join(", ") }}
{% endif %}
        local {
            auth = psk
            id = {{ networking_floating_ip }}
        }
        remote {
            auth = psk
            id = {{ ipsec_remote_name }}
        }
        children {
        # Important: This is a workaround for broken peers [0]. In theory, remote_ts supports a list of subnets.
        # In practice, it often times does not (old IKE version, missing plugins) and routes only the first
        # subnet listed in remote_ts.
        # [0] https://lists.strongswan.org/pipermail/users/2017-May/010996.html
{% for ts in (ipsec_peer_networks | default([])) %}
            net-{{ loop.index }} : net-base {
                remote_ts = {{ ts }}
            }
{% endfor %}
        }
        dpd_delay = 1
{% if ipsec_virtual_subnet_pool is defined %}
        pools = home
{% endif %}
        version = 2
        send_certreq = no
        proposals = {{ ipsec_proposals | join(", ") }}
    }
}

{% if ipsec_virtual_subnet_pool is defined %}
pools {
    home {
        addrs = {{ ipsec_virtual_subnet_pool }}
    }
}
{% endif %}

secrets {
    ike-1 {
        id-1 = {{ networking_floating_ip }}
        id-2 = {{ ipsec_remote_name }}
        secret = "{{ ipsec_eap_psk }}"
    }
}
