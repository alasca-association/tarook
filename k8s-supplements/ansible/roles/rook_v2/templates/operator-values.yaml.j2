image:
  tag: "{{ rook_version }}"
resources: {{ rook_operator_resources | to_json }}

nodeSelector:
{% if rook_scheduling_key is defined %}
  {{ rook_scheduling_key | to_json }}: "true"
{% endif %}

tolerations: {{ lookup('template', 'roles/config/common_defaults_v1/templates/tolerations.json') | to_json }}

monitoring:
  enabled: {{ k8s_monitoring_enabled | bool }}

discover:
  priorityClassName: system-cluster-critical
  tolerations: {{ lookup('template', 'roles/config/common_defaults_v1/templates/tolerations.json') | to_json }}
  nodeAffinity: {{ lookup('template', 'roles/config/common_defaults_v1/templates/affinity.json')['nodeAffinity'] | default(dict()) | to_json }}

agent:
  priorityClassName: system-cluster-critical
  tolerations: {{ lookup('template', 'roles/config/common_defaults_v1/templates/tolerations.json') | to_json }}

pspEnable: false

csi:
  enableRbdDriver: "{{ rook_csi_plugins }}"
  enableCephfsDriver: "{{ rook_csi_plugins }}"
  enableGrpcMetrics: "{{ rook_csi_plugins }}"
  enableCephfsSnapshotter: "{{ rook_csi_plugins }}"
  enableRBDSnapshotter: "{{ rook_csi_plugins }}"
  #rbdFSGroupPolicy: "ReadWriteOnceWithFSType"
  #cephFSFSGroupPolicy: "ReadWriteOnceWithFSType"
  provisionerTolerations: {{ lookup('template', 'roles/config/common_defaults_v1/templates/tolerations.json') | to_json }}
  provisionerNodeAffinity: {{ lookup('template', 'roles/config/common_defaults_v1/templates/affinity.json')['nodeAffinity'] | default(dict()) | to_json }}

  pluginTolerations:
{% if rook_nodeplugin_toleration == True %}
    - operator: Exists
{% else %}
    - effect: NoSchedule
      key: node-role.kubernetes.io/controlplane
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
{% if rook_nodeplugin_toleration %}
    - key: {{ rook_nodeplugin_toleration | to_json }}
      operator: Exists
{% endif %}
{% endif %}
