---
- name: Get k8s node information
  delegate_to: "{{ groups['orchestrator'] | first }}"
  kubernetes.core.k8s_info:
    kind: Node
    name: "{{ inventory_hostname }}"
  register: k8s_node_info

- name: Validate that the k8s node has an internal IPv4 and IPv6 address
  vars:
    k8s_node_internal_ips: "{{ k8s_node_info['resources'][0]['status']['addresses'] | map(attribute='address') | flatten }}"
  block:
    - name: Validate that the k8s node has an internal IPv4 address
      with_items:
        - "{{ k8s_node_internal_ips }}"
      when: item | ipv4
      ansible.builtin.set_fact:
        node_has_internal_ipv4: true

    - name: Validate that the k8s node has an internal IPv6 address
      with_items:
        - "{{ k8s_node_internal_ips }}"
      when: item | ipv6
      ansible.builtin.set_fact:
        node_has_internal_ipv6: true

- name: Validate the k8s node PodCIDR address blocks
  vars:
    k8s_node_address_blocks: "{{ k8s_node_info['resources'][0]['spec']['podCIDRs'] }}"
  block:
    - name: Validate that the k8s node has an IPv4 PodCIDR addressing block
      with_items:
        - "{{ k8s_node_address_blocks }}"
      when: item | ipv4
      ansible.builtin.set_fact:
        node_has_ipv4_address_block: true

    - name: Validate that the k8s node has an IPv6 PodCIDR addressing block
      with_items:
        - "{{ k8s_node_address_blocks }}"
      when: item | ipv6
      ansible.builtin.set_fact:
        node_has_ipv6_address_block: true

- name: Fail if the k8s node is not properly setup (IPv4)
  when: ipv4_enabled
  assert:
    that:
      - node_has_internal_ipv4
      - node_has_ipv4_address_block

- name: Fail if the k8s node is not properly setup (IPv6)
  when: ipv6_enabled
  assert:
    that:
      - node_has_internal_ipv6
      - node_has_ipv6_address_block
...
