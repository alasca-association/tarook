apiVersion: v1
kind: Service
metadata:
  name: nginx-service-single-stack-v6
  namespace: {{ check_services_namespace | to_json }}
spec:
  selector:
    app: nginx-single-stack-v6
  ipFamilies:
  - IPv6
  ipFamilyPolicy: SingleStack
  ports:
    - protocol: TCP
      nodePort: {{ deprecated_nodeport_lb_test_port }}
      port: 8080
      targetPort: 8080
  type: NodePort
---
# Workaround for https://github.com/nginxinc/docker-nginx-unprivileged/issues/228
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: {{ check_services_namespace | to_json }}
data:
  nginx.conf: |
    server {
        listen  [::]:8080;
        server_name  localhost;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx-single-stack-v6
  name: nginx-single-stack-v6
  namespace: {{ check_services_namespace | to_json }}
spec:
  securityContext:
    runAsNonRoot: true
    runAsUser: 101
    runAsGroup: 101
    fsGroup: 101
  tolerations:
  - key: "node-role.kubernetes.io/control-plane"
    operator: Exists
    effect: NoSchedule
  - key: "node-role.kubernetes.io/master"
    operator: Exists
    effect: NoSchedule
  containers:
  - image: registry.gitlab.com/yaook/images/k8s-nginx:main
    name: nginx-single-stack-v6
    resources: {}
    volumeMounts:
    - name: nginx-conf
      mountPath: /etc/nginx/conf.d/default.conf
      subPath: nginx.conf
      readOnly: true
  volumes:
  - name: nginx-conf
    configMap:
      name: nginx-conf
      items:
      - key: nginx.conf
        path: nginx.conf
  dnsPolicy: ClusterFirst
  restartPolicy: Never
{% if testing_nodes is defined and testing_nodes | length > 0 %}
  nodeSelector:
    kubernetes.io/hostname: {{ testing_nodes | first | to_json }}
{% endif %}
