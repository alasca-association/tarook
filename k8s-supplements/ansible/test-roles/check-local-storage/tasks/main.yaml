---
- name: show test information
  ansible.builtin.debug:
    msg: "This test is using the {{ storageclass }} storageClass"

- name: Run the test
  block:
  - name: create namespace
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      name: "{{ check_local_storage_namespace }}"
      state: present
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: create PVC
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'pvc.yaml.j2') }}"
      state: present
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: start writer pod
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'writer-pod.yaml.j2') }}"
      state: present
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: fetch writer pod completion state
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Pod
      name: writer-test
      namespace: "{{ check_local_storage_namespace }}"
    register: writer_state
    until: "writer_state.resources and (writer_state.resources[0].status | default(False)) and (writer_state.resources[0].status.phase | default('') in ['Succeeded', 'Failed'])"
    delay: 1
    retries: 60

  - name: check writer pod success
    ansible.builtin.debug:
      msg: "Writer pod is in condition {{ writer_state.resources[0].status.phase }}"
    failed_when: 'writer_state.resources[0].status.phase == "Failed"'

  - name: run reader pod
    vars:
      writer_pod_node_name: "{{ writer_state.resources[0].spec.nodeName }}"
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'reader-pod.yaml.j2') }}"
      state: present
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: fetch reader pod completion state
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Pod
      name: reader-test
      namespace: "{{ check_local_storage_namespace }}"
    register: reader_state
    until: "reader_state.resources and (reader_state.resources[0].status | default(False)) and (reader_state.resources[0].status.phase | default('') in ['Succeeded', 'Failed'])"
    delay: 1
    retries: 60

  - name: check reader pod success
    ansible.builtin.debug:
      msg: "Reader pod is in condition {{ reader_state.resources[0].status.phase }}"
    failed_when: 'reader_state.resources[0].status.phase == "Failed"'

  - name: Get the PVC
    kubernetes.core.k8s_info:
      api_version: v1
      kind: PersistentVolumeClaim
      name: "{{ check_local_storage_pvc_name }}"
      namespace: "{{ check_local_storage_namespace }}"
    register: pvc_info
    tags:
    - test-cleanup

  - name: delete namespace
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      name: "{{ check_local_storage_namespace }}"
      state: absent
      wait: true
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"
    tags:
    - test-cleanup

  - name: delete PV
    when: "(pvc_info.resources | length) > 0"
    kubernetes.core.k8s:
      api_version: v1
      kind: PersistentVolume
      name: "{{ pvc_info.resources[0].spec.volumeName }}"
      state: absent
      wait: false
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"
    tags:
    - test-cleanup
...
