---
- name: execute test
  block:
  - name: create test namespace
    kubernetes.core.k8s:
      api_version: v1
      name: "{{ check_loadbalancer_service_namespace }}"
      kind: Namespace
      state: present
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: Create k8s preliminaries (ServiceAccount, RBAC, echo-Deployment)
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'preliminaries.yaml.j2') }}"
      state: present
      wait: true
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: Create SingleStack IPv4 load-balanced service
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'service_single_stack_v4.yaml.j2') }}"
      state: present
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: require service to have ingress IP address set
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Service
      namespace: "{{ check_loadbalancer_service_namespace }}"
      name: "echo-service-single-stack-v4"
    register: service_state
    until: "service_state.resources and (service_state.resources[0].status | default(False)) and (service_state.resources[0].status.loadBalancer | default(False)) and (service_state.resources[0].status.loadBalancer.ingress | default(False))"
    delay: 5
    retries: 60

  - name: require service to be reachable from this machine and respond to HTTP
    ansible.builtin.uri:
      url: "http://{{ service_state.resources[0].status.loadBalancer.ingress[0].ip }}:{{ check_loadbalancer_service_port }}"
      status_code: 200
    register: uri_result
    until: uri_result is not failed
    delay: 1
    retries: 60

  - name: Remove SingleStack IPv4 load-balanced service
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'service_single_stack_v4.yaml.j2') }}"
      state: absent
      wait: true
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: Validate LB-Services for DualStack-Clusters
    when: dualstack_support
    ansible.builtin.include_tasks: dualstack-lb-services.yaml

  - name: Clean up k8s preliminaries (ServiceAccount, RBAC, echo-Deployment)
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'preliminaries.yaml.j2') }}"
      state: absent
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"
    tags:
    - test-cleanup

  - name: delete test namespace
    kubernetes.core.k8s:
      api_version: v1
      name: "{{ check_loadbalancer_service_namespace }}"
      kind: Namespace
      state: absent
      wait: true
      validate:
        fail_on_error: true
        strict: true
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"
    tags:
    - test-cleanup
...
