# Update k8s-rook from 1.5.* to 1.6.*
# https://rook.io/docs/rook/v1.5/ceph-upgrade.html#rook-operator-upgrade-process
---
# Verify that the Ceph cluster is healthy
- name: Include cluster health verification
  ansible.builtin.include_tasks: cluster_health_verification.yaml

- name: Configure k8s resources
  block:
    - name: Apply updated common resources
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ lookup('template', 'v1.6/common.yaml') }}"
        validate:
          fail_on_error: true
          strict: true
      # Retry this task on failures
      register: k8s_apply
      until: k8s_apply is not failed
      retries: "{{ k8s_error_retries }}"
      delay: "{{ k8s_error_delay }}"

    # We need to run kubectl replace and then kubectl apply.
    # Sadly there is no proper ansible module to do that.
    # (k8s module w/ force is not working and may be disruptive)
    # https://github.com/rook/rook/issues/7659
    - name: Create temporary CRD manifest in /tmp/rook-crds.yaml
      ansible.builtin.template:
        src: "v1.6/crds.yaml"
        dest: "/tmp/rook-crds.yaml"
        mode: 0600

    # https://github.com/rook/rook/issues/7659
    - name: Replace old Custom Resource Definitions (CRDs)  # noqa ignore-errors no-changed-when
      ansible.builtin.command:
      args:
        argv:
          - kubectl
          - replace
          - -f
          - /tmp/rook-crds.yaml
      ignore_errors: true

    - name: Apply updated Custom Resource Definitions (CRDs)
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ lookup('template', 'v1.6/crds.yaml') }}"
        validate:
          fail_on_error: true
          strict: true
      # Retry this task on failures
      register: k8s_apply
      until: k8s_apply is not failed
      retries: "{{ k8s_error_retries }}"
      delay: "{{ k8s_error_delay }}"

    # https://github.com/rook/rook/issues/7659
    - name: Remove temporary CRD manifest in /tmp/rook-crds.yaml
      ansible.builtin.file:
        path: /tmp/rook-crds.yaml
        state: absent

    # Necessary because "continueUpgradeAfterChecksEvenIfNotHealthy" needs
    # to be set additionally to "skipUpgradeChecks" since rook v1.6 (e.g. for CI)
    # Otherwise OSDs will not be updated if they would become unavailable
    # during the upgrade
    - name: Apply new cluster manifest (v1.6)
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ lookup('template', 'v1.6/cluster.yaml') }}"
        validate:
          fail_on_error: true
          strict: true
      # Retry this task on failures
      register: k8s_apply
      until: k8s_apply is not failed
      retries: "{{ k8s_error_retries }}"
      delay: "{{ k8s_error_delay }}"

    - name: Apply new rook-ceph-operator manifest (v1.6)
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ lookup('template', 'v1.6/operator.yaml') }}"
        validate:
          fail_on_error: true
          strict: true
      # Retry this task on failures
      register: k8s_apply
      until: k8s_apply is not failed
      retries: "{{ k8s_error_retries }}"
      delay: "{{ k8s_error_delay }}"

# The upgrade will take at least 5 minutes
# We are pausing here to prevent spamming the output with failures
- name: The upgrade will take several minutes, pausing ansible for 5m
  ansible.builtin.pause:
    seconds: 300

- name: Wait until the ceph cluster's core components are fully updated
  ansible.builtin.include_tasks: wait_for_rook_upgrade.yaml

- name: Give the rook-based ceph cluster time (20s) to stabilize
  ansible.builtin.pause:
    seconds: 20

- name: Include cluster health verification
  ansible.builtin.include_tasks: cluster_health_verification.yaml
...
