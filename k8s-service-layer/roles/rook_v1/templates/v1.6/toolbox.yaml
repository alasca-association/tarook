# https://github.com/rook/rook/releases/tag/v1.6.7
# $YOUR_ROOK_REPO/cluster/examples/kubernetes/ceph/

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ rook_cluster_name }}-tools"
  namespace: "{{ rook_namespace }}" # namespace:cluster
  labels:
    app: "{{ rook_cluster_name }}-tools"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ rook_cluster_name }}-tools"
  template:
    metadata:
      labels:
        app: "{{ rook_cluster_name }}-tools"
    spec:
      dnsPolicy: ClusterFirstWithHostNet
{% if rook_scheduling_key %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ rook_scheduling_key | to_json }}
                operator: Exists
      tolerations:
      - key: {{ rook_scheduling_key | to_json }}
        operator: Exists
{% endif %}
      containers:
        - name: "{{ rook_cluster_name }}-tools"
          image: "rook/ceph:{{ rook_image_versions.toolbox }}"
          command: ["/tini"]
          args: ["-g", "--", "/usr/local/bin/toolbox.sh"]
          imagePullPolicy: IfNotPresent
          env:
            - name: ROOK_CEPH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rook-ceph-mon
                  key: ceph-username
            - name: ROOK_CEPH_SECRET
              valueFrom:
                secretKeyRef:
                  name: rook-ceph-mon
                  key: ceph-secret
          volumeMounts:
            - mountPath: /etc/ceph
              name: ceph-config
            - name: mon-endpoint-volume
              mountPath: /etc/rook
      volumes:
        - name: mon-endpoint-volume
          configMap:
            defaultMode: 420
            name: rook-ceph-mon-endpoints
            items:
              - key: data
                path: mon-endpoints
        - name: ceph-config
          emptyDir: {}
#      tolerations:
#        - key: "node.kubernetes.io/unreachable"
#          operator: "Exists"
#          effect: "NoExecute"
#          tolerationSeconds: 5
