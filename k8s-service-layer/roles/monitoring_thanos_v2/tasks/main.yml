---
- name: Are OpenStack credentials available?
  when: (monitoring_thanos_objectstorage_config_file | length) == 0
  include_role:
    name: check-openstack-credentials

- name: Create namespace
  kubernetes.core.k8s:
    apply: true
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ monitoring_namespace }}"
    validate:
      fail_on_error: true
      strict: true
  # Retry this task on failures
  register: k8s_apply
  until: k8s_apply is not failed
  retries: "{{ k8s_error_retries }}"
  delay: "{{ k8s_error_delay }}"
  tags:
  - monitoring
  - thanos

- name: Cleanup K8s resource for the thanos v1 deployment
  block:
  - name: Check if Thanos v1 is deployed
    kubernetes.core.k8s_info:
      kind: Pod
      api_version: v1
      namespace: "{{ monitoring_namespace }}"
      label_selectors:
      - app.kubernetes.io/version=v0.26.0
    register: k8s_get_thanos_v1
    until: k8s_get_thanos_v1 is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"
    tags:
    - thanos

  - name: Include Thanos v1 cleanup tasks
    ansible.builtin.include_tasks: cleanup-thanos-v1.yaml
    when: k8s_get_thanos_v1.resources is defined and k8s_get_thanos_v1.resources | length != 0
    tags:
    - thanos

- name: Create thanos secret
  kubernetes.core.k8s:
    apply: true
    definition:
      apiVersion: v1
      type: Opaque
      kind: Secret
      metadata:
        name: "{{ monitoring_thanos_config_secret_name }}"
        namespace: "{{ monitoring_namespace }}"
      data:
        objstore.yml: "{{ lookup('template', 'thanos-objectstorage.yaml.j2') | b64encode }}"
    validate:
      fail_on_error: true
      strict: true
  # Retry this task on failures
  register: k8s_apply
  until: k8s_apply is not failed
  retries: "{{ k8s_error_retries }}"
  delay: "{{ k8s_error_delay }}"
  tags:
  - thanos

- name: "{{ monitoring_use_thanos | ternary('Add', 'Remove') }} bitnami Repo"
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: "{{ monitoring_thanos_helm_repo_url }}"
    repo_state: "{{ monitoring_use_thanos | ternary('present', 'absent') }}"
    force_update: true
  # Retry this task on failures
  register: task_result
  until: task_result is not failed
  retries: "{{ network_error_retries }}"
  delay: "{{ network_error_delay }}"
  tags:
  - thanos

- name: "{{ monitoring_use_thanos | ternary('I', 'Uni') }}nstall Thanos helm chart"
  kubernetes.core.helm:
    chart_ref: "{{ monitoring_thanos_chart_ref }}"
    chart_version: "{{ monitoring_thanos_chart_version }}"
    release_namespace: "{{ monitoring_namespace }}"
    release_name: "{{ monitoring_thanos_release_name }}"
    release_state: "{{ monitoring_use_thanos | ternary('present', 'absent') }}"
    values: "{{ lookup('template', 'thanos_values.yaml.j2') | from_yaml }}"
    wait: true
    update_repo_cache: true
  # Retry this task on failures
  register: task_result
  until: task_result is not failed
  retries: "{{ network_error_retries }}"
  delay: "{{ network_error_delay }}"
  tags:
  - thanos
...
