---
- name: Create namespace
  when: k8s_ingress_install
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ k8s_ingress_namespace }}"
    validate:
      fail_on_error: yes
      strict: yes

- name: "{{ k8s_ingress_install | ternary('Add', 'Remove') }} ingress-nginx Repo"
  kubernetes.core.helm_repository:
    name: ingress-nginx
    repo_url: https://kubernetes.github.io/ingress-nginx
    repo_state: "{{ k8s_ingress_install | ternary('present', 'absent') }}"

- name: Install NGINX ingress
  vars:
    scheduling_key: "{{ k8s_ingress_scheduling_key }}"
  kubernetes.core.helm:
    chart_ref: ingress-nginx
    chart_repo_url: https://kubernetes.github.io/ingress-nginx
    release_namespace: "{{ k8s_ingress_namespace }}"
    release_name: ingress
    release_state: "{{ k8s_ingress_install | ternary('present', 'absent') }}"
    values:
      defaultBackend:
        affinity: "{{ lookup('template', 'roles/common_defaults_v1/templates/affinity.json') }}"
        tolerations: "{{ lookup('template', 'roles/common_defaults_v1/templates/tolerations.json') }}"
      controller:
        affinity: "{{ lookup('template', 'roles/common_defaults_v1/templates/affinity.json') }}"
        tolerations: "{{ lookup('template', 'roles/common_defaults_v1/templates/tolerations.json') }}"
        service:
          type: "{{ k8s_ingress_service_type }}"
          nodePorts:
            http: "{{ k8s_ingress_nodeport_http }}"
            https: "{{ k8s_ingress_nodeport_https }}"
        extraArgs:
          enable-ssl-passthrough: "{{ k8s_ingress_enable_ssl_passthrough }}"
        priorityClassName: "system-cluster-critical"
  register: task_result
  until: task_result.failed == false
  retries: "{{ network_error_retries }}"
  delay: "{{ network_error_delay }}"
