stages:
- lint
- test

tflint:
  image:
    name: wata727/tflint:latest
    entrypoint: ["/bin/sh", "-c"]
  rules:
  - when: always
  stage: lint
  script:
  - tflint terraform
  tags:
  - docker

shellcheck:
  image: koalaman/shellcheck-alpine:stable
  rules:
  - when: always
  stage: lint
  script:
  - "find -iname '*.sh' '!' -ipath './jsonnet-sources/*/vendor/**' -print0 | xargs -0 -- shellcheck -Calways"
  tags:
  - docker

ansible-lint:
  image:
    name: cytopia/ansible-lint
    entrypoint: ["/bin/sh", "-c"]
  rules:
  - when: always
  stage: lint
  script:
  - 'cd ansible && ansible-lint -x 701 02_trampoline.yaml 03_final.yaml'
  tags:
  - docker

flake8:
  image: python:3
  script:
  - 'pip3 install flake8'
  - 'python3 -m flake8 **/*.py'
  rules:
  - when: always
  stage: lint
  tags:
  - docker

cluster-spawn:
  image: gitlab-registry.cloudandheat.com/docker/ch-managed-k8s-docker:0.3.0
  rules:
  - if: '$CI_COMMIT_REF_NAME =~ /^(master|stable)$/'
    when: on_success
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    when: manual
  - when: never
  allow_failure: false
  stage: test
  variables:
    ANSIBLE_ANY_ERRORS_FATAL: "true"
    ANSIBLE_FORCE_COLOR: "true"
  before_script:
  - 'export wg_conf_name=wg0'
  # id_rsa must be set as `File` input in the GitLab CI/CD variables of the
  # repository.
  - 'cp "$id_rsa" /root/.ssh/id_rsa && chmod go-rwx -R /root/.ssh'
  # wg_private_key must be set as `File` input in the GitLab CI/CD variables of
  # the repository.
  - 'cp "$wg_private_key" "$wg_private_key_file"'
  # OS_PASSWORD must be set as `Variable` input in the GitLab CI/CD variables of
  # the repository.
  - . /root/openrc.sh
  - git clean -f .
  - git submodule update --init --recursive
  - 'chmod o-w *'
  - cd ci
  - git submodule add --force --branch master git@gitlab.cloudandheat.com:lcm/wg_user
  script:
  - pip3 install -r managed-k8s/requirements.txt
  - python3 managed-k8s/jenkins/toml_helper.py
  - ./managed-k8s/actions/apply-terraform.sh
  - ./reachability-or-recreate.sh
  - timeout 25m ./managed-k8s/actions/apply-stage2.sh
  - timeout 50m ./managed-k8s/actions/apply-stage3.sh
  - timeout 15m ./managed-k8s/actions/test.sh
  after_script:
  - 'export wg_conf_name=wg0'
  - cd ci
  - . /root/openrc.sh
  - 'MANAGED_K8S_RELEASE_THE_KRAKEN=true MANAGED_K8S_NUKE_FROM_ORBIT=true ./managed-k8s/actions/destroy.sh'
  tags:
  - docker
  - wireguard-ready
  resource_group: ch-k8s-ci-environment-f1a-1
