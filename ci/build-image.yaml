.build-image-rules-changes: &build-image-rules-changes
    changes:
    - flake.nix
    - flake.lock
    - ci/build-image.yaml
    - ci/container-image/*

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375

# build_image_main_or_tagged:
#   tags:
#     - docker
#   image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:26.0.0"
#   services:
#     - name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:26.0.0-dind"
#       alias: docker
#   stage: build-image
#   rules:
#   - if: '$CI_COMMIT_REF_NAME =~ /^(main|devel|v[0-9]+\.[0-9.]+)$/'
#     <<: *build-image-rules-changes
#     when: always
#   - when: never
#   before_script:
#     - mkdir $HOME/.docker
#     - docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
#   script:
#     # Cut out the "v" of version strings
#   - 'if $(echo "${CI_COMMIT_REF_NAME}" | grep -Eq "^(v[0-9]+\.[0-9.]+)"); then export IMAGE_TAG="${CI_COMMIT_REF_NAME#v}"; else export IMAGE_TAG="$CI_COMMIT_REF_NAME"; fi'
#   - nix run .#ciImage.copyToDockerDaemon
#   - 'export IMAGE_REF_BASE="${CI_REGISTRY_IMAGE}/base:${IMAGE_TAG}"'
#   - 'export IMAGE_REF_F1A="${CI_REGISTRY_IMAGE}/f1a:${IMAGE_TAG}"'
#   # - 'export IMAGE_REF_F1B="${CI_REGISTRY_IMAGE}/f1b:${IMAGE_TAG}"'
#   - 'docker build -t "${IMAGE_REF_BASE}" -f Dockerfile.base .'
#   - 'docker build -t "${IMAGE_REF_F1A}" -f Dockerfile.openrc --build-arg openrc=openrc_f1a.sh --build-arg image="${IMAGE_REF_BASE}" .'
#   # - 'docker build -t "${IMAGE_REF_F1B}" -f Dockerfile.openrc --build-arg openrc=openrc_f1b.sh --build-arg image="${IMAGE_REF_BASE}" .'
#   - 'docker push "${IMAGE_REF_BASE}"'
#   - 'docker push "${IMAGE_REF_F1A}"'
#   # - 'docker push "${IMAGE_REF_F1B}"'
#   - 'docker image rm "${IMAGE_REF_BASE}"'
#   - 'docker image rm "${IMAGE_REF_F1A}"'
#   # - 'docker image rm "${IMAGE_REF_F1B}"'

build_image_mr:
  tags:
    - docker
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/nixos/nix:2.21.2"
  # services:
  #   - name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:26.0.0-dind"
  #     alias: docker
  stage: build-image
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    <<: *build-image-rules-changes
    when: always
  - when: never
  before_script:
    - |
      cat > /etc/nix/nix.conf <<EOF
      build-users-group = nixbld
      sandbox = false
      extra-experimental-features = nix-command flakes
      substituters = https://cache.nixos.org/ https://yaook.cachix.org
      trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= yaook.cachix.org-1:m85JtxgDjaNa7hcNUB6Vc/BTxpK5qRCqF4yHoAniwjQ=
      EOF
  script:
  - nix run .#skopeo -- login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  - nix run ".#ciImage.copyToRegistry"
  - export IMAGE_BASE_NAME="${CI_REGISTRY_IMAGE}/ci-image-nix-test"
  - export IMAGE_REF_BUILD="${IMAGE_BASE_NAME}:build"
  - export IMAGE_TAG="${CI_COMMIT_REF_NAME}"
  - export IMAGE_REF_PUSH="${IMAGE_BASE_NAME}:${IMAGE_TAG}"
  - nix run .#skopeo -- --insecure-policy copy "docker://${IMAGE_REF_BUILD}" "docker://${IMAGE_REF_PUSH}"
