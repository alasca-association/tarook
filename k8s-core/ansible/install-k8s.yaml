---
- name: Initialize node connection
  import_playbook: "connect-to-nodes.yaml"

- name: Fail if node got not bootstrapped once, yet
  any_errors_fatal: true
  hosts: all:!orchestrator
  tasks:
  - name: Fail if node got not bootstrapped once, yet
    when: not ansible_local['bootstrap']['bootstrapped'] | default(False) | bool
    fail:
      msg: |
        ERROR

        We're at an advanced stage of the rollout,
        but the node did not get bootstrapped yet!
        Please ensure the k8s-core/bootstrap playbook
        is executed at least once against every node
        before proceeding.
        This is automatically done if the install-all
        playbook of either k8s-core or k8s-supplements is executed.

- name: Prepare the k8s nodes
  hosts: k8s_nodes
  gather_facts: true
  vars_files:
  - vars/etc.yaml
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/retries.yaml
  roles:
  - role: k8s-networking
    tags: k8s-networking
  - role: nvidia-cuda-drivers
    when: k8s_is_gpu_cluster and not k8s_virtualize_gpu and ansible_local['gpu-node']['node_has_gpu'] | bool
    tags:
    - gpu-support
    - nvidia-cuda-drivers
  - role: nvidia-container-toolkit
    when: k8s_is_gpu_cluster and not k8s_virtualize_gpu and ansible_local['gpu-node']['node_has_gpu'] | bool
    tags:
    - gpu-support
    - nvidia-container-toolkit
  - role: vgpu-support
    tags: vgpu-support
    when: k8s_virtualize_gpu and not k8s_is_gpu_cluster
  - role: containerd
    tags: containerd
  - role: k8s-packages
    tags: k8s-packages

- name: Configure sysctl on K8s nodes
  hosts: k8s_nodes
  gather_facts: false
  roles:
  - role: vm-max-map-count
    when: "vm_max_map_count is defined"
    tags: vm-max-map-count
  - role: fs-inotify
    tags: fs-inotify

- name: Install frontend services
  import_playbook: install-frontend-services.yaml

- name: Clean up control plane
  hosts: masters
  gather_facts: true
  serial: 1
  roles:
  - role: etcd-clean-stale-members
    when: ansible_local['kubernetes-initialized']['k8s_install_status'] | default('not_initialized') == 'initialized'
    tags: etcd-clean-stale-members

- name: Spawn the K8s control plane
  hosts: masters
  gather_facts: true
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  - vars/vault-config.yaml
  serial:
  - 1
  - "100%"
  roles:
  - role: k8s-master
    tags: k8s-master

- name: Spawn and configure the K8s worker nodes
  hosts: workers
  gather_facts: true
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  - vars/vault-config.yaml
  roles:
  - role: k8s-worker
    tags: k8s-worker
  - role: kubelet-configuration
    tags: kubelet-configuration

- name: Configure Nvidia Device Plugin
  hosts: workers
  vars_files:
  - vars/retries.yaml
  roles:
  - role: nvidia-device-plugin
    when: k8s_is_gpu_cluster and not k8s_virtualize_gpu
    tags:
    - gpu-support
    - nvidia-device-plugin
...
