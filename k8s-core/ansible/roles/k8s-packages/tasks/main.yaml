---
- name: Install prerequisites
  become: true
  ansible.builtin.apt:
    update_cache: true
    state: present
    name:
      - curl
      - apt-transport-https
      - gnupg
  register: task_result
  until: task_result is not failed
  retries: "{{ network_error_retries }}"
  delay: "{{ network_error_delay }}"
  when: ansible_pkg_mgr == 'apt'

- name: Expand NO_PROXY configuration on Ubuntu machines
  when: cluster_behind_proxy and ansible_distribution == 'Ubuntu'
  become: true
  ansible.builtin.lineinfile:
    path: /etc/environment
    regexp: "^(.*{{ item }}.*)$"
    line: "{{ item }}={{ no_proxy }},{{ k8s_network_pod_subnet }},{{ k8s_network_service_subnet }},{{ subnet_cidr }},{{ networking_fixed_ip }}"
    state: present
  loop:
    - NO_PROXY
    - no_proxy

- name: Expand NO_PROXY configuration on RHEL machines
  when: cluster_behind_proxy and ansible_distribution == 'Red Hat Enterprise Linux'
  become: true
  ansible.builtin.lineinfile:
    path: /etc/profile.d/proxy.sh
    regexp: "^(.*{{ item }}.*)$"
    line: "{{ item }}={{ no_proxy }},{{ k8s_network_pod_subnet }},{{ k8s_network_service_subnet }},{{ subnet_cidr }},{{ networking_fixed_ip }}"
    state: present
  loop:
    - NO_PROXY
    - no_proxy

- name: Include package repository configuration
  include_tasks:
    file: configure-package-repo.yaml

- name: Install kubelet, kubeadm and kubectl
  block:
    - name: Remove hold of packages if migration needed  # noqa no-changed-when no-handler
      when: drop_google_repo.changed | default(False)
      become: true
      ansible.builtin.command: apt-mark unhold kubelet kubeadm kubectl

    - name: Install kubelet, kubeadm and kubectl
      # Note: check available version with `apt-cache policy <package name>`
      become: true
      ansible.builtin.package:
        state: present
        name:
          - "kubelet={{ k8s_version }}-*"
          - "kubeadm={{ k8s_version }}-*"
          - "kubectl={{ k8s_version }}-*"
      register: task_result
      until: task_result is not failed
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"
      notify: Restart kubelet

    - name: Prevent the k8s packages for being updated  # noqa no-changed-when
      become: true
      ansible.builtin.command: apt-mark hold kubelet kubeadm kubectl

# kubelet should be restarted immediately
- name: Force restart of kubelet at this point
  ansible.builtin.meta: flush_handlers
...
