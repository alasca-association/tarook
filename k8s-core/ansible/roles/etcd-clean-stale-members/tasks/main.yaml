---
# tasks file for etcd-clean-stale-members

- name: Detect and remove stale etcd members
  when: k8s_install_status == "initialized"
  delegate_to: "{{ groups['orchestrator'] | first }}"
  block:
    - name: Get etcd members
      kubernetes.core.k8s_exec:
        namespace: kube-system
        pod: "etcd-{{ inventory_hostname }}"
        command: "etcdctl --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/peer.crt --key /etc/kubernetes/pki/etcd/peer.key --endpoints https://{% if ipv4_enabled %}127.0.0.1{% elif ipv6_enabled %}[::1]{% endif %}:2379 member list -w json"
      register: etcd_members
    - name: Detect stale entries
      loop: "{{ (etcd_members.stdout | from_json).members }}"
      # tame ansible's output
      # https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#limiting-loop-output-with-label
      loop_control:
        label: "{{ item.name }}"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
        name: "{{ item.name }}"
      register: skeleton_candidates
    - name: Inform the user of any deletion
      loop: "{{ skeleton_candidates.results }}"
      loop_control:
        label: "{{ item.item.name }}"
      when: not item.resources  # that means k8s doesn't about a node of that name
      ansible.builtin.debug:
        msg: "[WARNING] The LCM will remove {{ item.item.name }} as a stale entry from the etcd database."
    - name: Delete stale entries
      loop: "{{ skeleton_candidates.results }}"
      loop_control:
        label: "{{ item.item.name }}"
      when: not item.resources  # that means k8s doesn't about a node of that name
      vars:
        member_id: "{{ '%x' % item.item.ID }}"
      kubernetes.core.k8s_exec:
        namespace: kube-system
        pod: "etcd-{{ inventory_hostname }}"
        command: "etcdctl --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/peer.crt --key /etc/kubernetes/pki/etcd/peer.key member remove {{ member_id }}"
...
