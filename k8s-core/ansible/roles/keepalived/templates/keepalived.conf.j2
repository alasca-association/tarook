#jinja2: lstrip_blocks: True
{{ _auto_generated_preamble }}

vrrp_script chk_haproxy {
    script "/etc/keepalived/chk_haproxy.sh"
    interval 2
    fall 2
    rise 2
}

{% if ipv4_enabled and ipv6_enabled %}

# Virtual Group Gateway
# Group the VRRP instances
vrrp_sync_group VGG {
   group {
      VIP_1
      VIP_1_V6
   }
}
{% endif %}

{% if ipv4_enabled %}
vrrp_instance VIP_1 {
    state MASTER
    interface {{ ansible_default_ipv4.interface }}
    # All VRRP instances belonging to the same cluster must share this id
    virtual_router_id 47
    priority {{ vrrp_priorities[(groups['frontend'] | sort).index(inventory_hostname)] }}
    advert_int 1
    virtual_ipaddress {
        {{ networking_fixed_ip }}
    }
    unicast_src_ip {{ local_ipv4_address | ipaddr }}
    unicast_peer {
        {% for hostname in groups['frontend'] %}
        {% set peer = hostvars[hostname] %}
        {% if not peer.local_ipv4_address == local_ipv4_address %}
        {{ peer.local_ipv4_address | ipaddr }}
        {% endif %}
        {% endfor %}
    }
    nopreempt
    track_script {
        chk_haproxy
    }
    notify /etc/keepalived/notifier.sh
}
{% endif %}

{% if ipv6_enabled %}
vrrp_instance VIP_1_V6 {
    state MASTER
    interface {{ ansible_default_ipv6.interface }}
    virtual_router_id 47
    priority {{ vrrp_priorities[(groups['frontend'] | sort).index(inventory_hostname)] }}
    advert_int 1
    virtual_ipaddress {
        {{ networking_fixed_ip_v6 }}
    }
    unicast_src_ip {{ local_ipv6_address | ipaddr }}
    unicast_peer {
        {% for hostname in groups['frontend'] %}
        {% set peer = hostvars[hostname] %}
        {% if not peer.local_ipv6_address == local_ipv6_address %}
        {{ peer.local_ipv6_address | ipaddr }}
        {% endif %}
        {% endfor %}
    }
    nopreempt
    track_script {
        chk_haproxy
    }
    notify /etc/keepalived/notifier.sh
}
{% endif %}

include /var/lib/ch-k8s-lbaas-agent/keepalived/*.conf
