---
- name: Create containerd proxy configuration
  become: true
  block:
    - name: Ensure directory containerd service directory is present
      become: true
      ansible.builtin.file:
        path: /etc/systemd/system/containerd.service.d
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Create containerd service extension
      become: true
      ansible.builtin.template:
        src: http-proxy.conf.j2
        dest: /etc/systemd/system/containerd.service.d/http-proxy.conf
        owner: root
        group: root
        mode: 0640
      register: service_drop_in  # TODO: Trigger containerd restart

- name: Expand NO_PROXY configuration
  become: true
  ansible.builtin.lineinfile:
    path: /etc/environment
    regexp: "^(.*{{ item }}.*)$"
    line: "{{ item }}={{ no_proxy }},{{ k8s_network_pod_subnet }},{{ k8s_network_service_subnet }},{{ subnet_cidr }},{{ networking_fixed_ip }}"
    state: present
  loop:
    - NO_PROXY
    - no_proxy

- name: Control and create proxy configuration for Ubuntu machines
  become: true
  when: (cluster_behind_proxy | default(false)) and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  block:
    - name: Ensure /etc/environment contains proxy configuration
      become: true
      ansible.builtin.command: grep -Fq "no_proxy" /etc/environment
      register: proxy_conf
      check_mode: false
      ignore_errors: true
      changed_when: false

    - name: Expand /etc/environment with proxy configuration
      when: proxy_conf.failed
      ansible.builtin.lineinfile:
        path: /etc/environment
        insertafter: EOF
        line: "{{ item }}"
      loop:
        - HTTP_PROXY={{ http_proxy }}
        - http_proxy={{ http_proxy }}
        - HTTPS_PROXY={{ https_proxy }}
        - https_proxy={{ https_proxy }}
        - NO_PROXY={{ no_proxy }}
        - no_proxy={{ no_proxy }}
...
