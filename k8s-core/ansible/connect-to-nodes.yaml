---
- name: Initialize node connection
  hosts: "{{ target_hosts | default('all:!orchestrator') }}"
  gather_facts: false
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  roles:
  - role: bootstrap/detect-user
    tags:
    - detect-user
    - bootstrap
    - connect
    - always
  - role: bootstrap/prepare-node
    tags:
    - prepare-node
    - bootstrap
    - connect
    - always

- name: Onboard node
  hosts: "{{ target_hosts | default('all:!orchestrator') }}"
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  - vars/vault-config.yaml
  roles:
  - role: bootstrap/vault-onboarded
    when: not (ansible_facts['node_vault_onboarded'] | default(False))
    tags:
    - vault-onboarded
    - bootstrap
    - connect
    - always
  - role: bootstrap/ssh-known-hosts
    when: not (ansible_facts['node_ssh_onboarded'] | default(False))
    tags:
    - ssh-known-hosts
    - bootstrap
    - connect
    - always

- name: Harden SSH
  hosts: "{{ target_hosts | default('all:!orchestrator') }}"
  become: true
  vars_files:
  - vars/ssh-hardening.yaml
  pre_tasks:
  - name: Gather all public keys
    when: not (ansible_facts['node_ssh_hardened'] | default(False))
    become: true
    find:
      paths: /etc/ssh
      recurse: false
      file_type: file
      patterns: "ssh_host_*_key"
      use_regex: false
    register: private_key_files
    tags:
    - bootstrap
    - connect
    - harden-ssh
    - always
  - name: Gather all public key certificates
    when: not (ansible_facts['node_ssh_hardened'] | default(False))
    become: true
    find:
      paths: /etc/ssh
      recurse: false
      file_type: file
      patterns: "ssh_host_*_key-cert.pub"
      use_regex: false
    register: pub_key_cert_files
    tags:
    - bootstrap
    - connect
    - harden-ssh
    - always
  roles:
  # https://github.com/dev-sec/ansible-collection-hardening/
  - role: devsec.hardening.ssh_hardening
    when: not (ansible_facts['node_ssh_hardened'] | default(False))
    tags:
    - bootstrap
    - harden-ssh
    - connect
    - always
    vars:
      ssh_host_key_files: "{{ private_key_files.files | selectattr('path', 'defined') | map(attribute='path') }}"
      ssh_host_certificates: "{{ pub_key_cert_files.files | selectattr('path', 'defined') | map(attribute='path') }}"
  post_tasks:
  - name: Set fact that we're hardened
    when: not (ansible_facts['node_ssh_hardened'] | default(False))
    set_fact:
      node_ssh_hardened: true
      cacheable: true
    tags:
    - bootstrap
    - connect
    - harden-ssh
    - always
...
