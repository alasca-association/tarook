---
- name: Initialize node connection
  import_playbook: "connect-to-nodes.yaml"
  vars:
    target_hosts: frontend

- name: Fail if node got not bootstrapped once, yet
  any_errors_fatal: true
  hosts: frontend
  tasks:
  - name: Fail if node got not bootstrapped once, yet
    when: not ansible_local['bootstrap']['bootstrapped'] | default(False) | bool
    fail:
      msg: |
        ERROR

        We're at an advanced stage of the rollout,
        but the node did not get bootstrapped yet!
        Please ensure the k8s-core/bootstrap playbook
        is executed at least once against every node
        before proceeding.
        This is automatically done if the install-all
        playbook of either k8s-core or k8s-supplements is executed.

# Drop this play when deprecating support for release v8
# It is only needed to migrate existing clusters for !1450
- name: Prevent update on nodes setup before release v8
  hosts: frontend
  tasks:
  - name: Validate if frontend services are installed
    when: ansible_local['frontend-initialized']['frontend_install_status'] | default('not_initialized') != 'initialized'
    become: true
    block:
    - name: Check if frontend services are running
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      check_mode: true
      loop:
      - keepalived
      - haproxy

    - name: Set static fact that frontend node is initialized
      vars:
        content:
          frontend_install_status: "initialized"
      copy:
        dest: /etc/ansible/facts.d/frontend-initialized.fact
        owner: root
        group: root
        mode: 0644
        content: "{{ content | to_json }}"

    - name: Update cached facts
      setup:
    rescue:
    - name: Inform that node has no frontend services running, yet
      ansible.builtin.debug:
        msg: "Node has no frontend services running, yet"

- name: Group frontend nodes by initialization status
  hosts: frontend
  gather_facts: true
  tags: update-frontend-nodes
  tasks:
  - name: Group frontend nodes by frontend initialization status
    ansible.builtin.group_by:
      key: "{{ ansible_local['frontend-initialized']['frontend_install_status'] | default('not_initialized') }}_frontend_nodes"
  - name: Group frontend nodes by Kubernetes initialization status
    ansible.builtin.group_by:
      key: "{{ ansible_local['kubernetes-initialized']['k8s_install_status'] | default('not_initialized') }}_kubernetes_nodes"

- name: Upgrade uninitialized frontend nodes
  gather_facts: true
  hosts: not_initialized_frontend_nodes:&not_initialized_kubernetes_nodes
  vars_files:
  - vars/disruption.yaml
  - vars/retries.yaml
  tags: update-frontend-nodes
  roles:
  - role: update-system
    tags: update-system

- name: Upgrade initialized frontend nodes
  gather_facts: true
  hosts: initialized_frontend_nodes
  vars_files:
  - vars/disruption.yaml
  - vars/retries.yaml
  serial: 1
  tags: update-frontend-nodes
  roles:
  - role: update-system
    tags: update-system
    when: _allow_disruption
...
