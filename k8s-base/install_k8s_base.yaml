---
- name: Initial sanity checks
  hosts: localhost
  gather_facts: false
  vars_files:
  - vars/etc.yaml
  roles:
  - validate_configuration
  - vault-migrated

- name: Initial node bootstrap
  hosts: k8s_nodes
  gather_facts: false
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  roles:
  - role: detect_user
    tags: detect_user
  - role: ssh-known-hosts
    tags: ssh-known-hosts
  - role: prepare-node
    tags: prepare-node
  - role: configure-apt-proxy
    tags: configure-apt-proxy
  - role: journald
    tags: journald
  - role: is-k8s-installed
    tags: update_system
  - role: configure-automatic-system-updates
    tags: configure-automatic-system-updates
  - role: monitoring-system-update-status
    tags: monitoring-system-update-status
  - role: disable-swap
    tags: disable-swap
  - role: vault-onboarded
    tags: vault-onboarded

- name: Disable SELinux
  hosts: k8s_nodes
  roles:
  - role: disable_selinux
    tags: disable_selinux
    when: ansible_os_family == 'RedHat'

- name: Harden SSH
  hosts: k8s_nodes
  become: true
  roles:
  # https://github.com/dev-sec/ansible-collection-hardening/
  - role: devsec.hardening.ssh_hardening
    tags: harden-ssh

- name: Upgrade the system
  hosts: k8s_nodes
  gather_facts: false
  vars_files:
  - vars/disruption.yaml
  - vars/retries.yaml
  tasks:
  - name: Upgrade the system
    when: install_status == 'k8s_not_installed'
    ansible.builtin.include_role:
      name: update_system
    tags:
    - update_system

- name: Detect login for gateways
  hosts: gateways
  gather_facts: false
  vars_files:
  - vars/etc.yaml
  roles:
  - detect_user

- name: Prepare Gateways
  hosts: frontend
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  roles:
  - role: k8s-api-frontend
    tags: k8s-api-frontend
  - role: global-monitoring-frontend
    tags: k8s-global-monitoring  # ToDo: find better tag
    when: k8s_global_monitoring_enabled

- name: Rollout company users
  hosts: k8s_nodes
  gather_facts: true
  tasks:
  - name: Rollout company users
    when: cah_users_rollout
    ansible.builtin.include_role:
      name: ch-role-users
    tags:
    - ch-role-users

- name: Prepare the k8s nodes
  hosts: k8s_nodes
  gather_facts: true
  vars_files:
  - vars/etc.yaml
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/retries.yaml
  roles:
  - role: networking
    tags: networking
  - role: ntp
    tags: ntp
  - role: nvidia-cuda-drivers
    when: k8s_is_gpu_cluster and not k8s_virtualize_gpu
    tags:
    - gpu-support
    - nvidia-cuda-drivers
  - role: nvidia-container-toolkit
    when: k8s_is_gpu_cluster and not k8s_virtualize_gpu
    tags:
    - gpu-support
    - nvidia-container-toolkit
  - role: vgpu-support
    tags: vgpu-support
    when: k8s_virtualize_gpu and not k8s_is_gpu_cluster
  - role: containerd
    tags: containerd
  - role: kubeadm
    tags: kubeadm
  - role: remove_snap
    tags: remove_snap

- name: Clean up control plane
  hosts: masters
  gather_facts: true
  serial: 1
  roles:
  - role: etcd-clean-stale-members
    tags: etcd-clean-stale-members

- name: Spawn the K8s control plane
  hosts: masters
  gather_facts: true
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  # With serial we can specify the number of hosts on which the Playbook is
  # executed in parallel.
  # https://docs.ansible.com/ansible/latest/user_guide/playbooks_delegation.html
  # FIXME: Do we really want to copy our OpenStack user credentials like this?
  serial:
  - 1
  - "100%"
  roles:
  - role: k8s-master
    tags: k8s-master

- name: Spawn and configure the k8s worker nodes
  hosts: workers
  gather_facts: true
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  roles:
  - role: k8s-worker
    tags: k8s-worker
  - role: kubelet-configuration
    tags: kubelet-configuration

- name: Install volume snapshot controller
  hosts: masters
  gather_facts: false
  vars_files:
  - vars/retries.yaml
  roles:
  - role: volume-snapshots
    tags:
    - volume-snapshot
    - volume-snapshot-controller

- name: Spawn the OpenStack k8s Control Plane
  hosts: masters
  become: true
  gather_facts: false
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/retries.yaml
  run_once: true
  roles:
  - role: connect-k8s-to-openstack
    tags: connect-k8s-to-openstack
    when: on_openstack | default(False) | bool
  - role: ch-k8s-lbaas-controller
    tags:
    - ch-k8s-lbaas
    - ch-k8s-lbaas-controller

- name: Install calico with the tigera operator
  hosts: masters
  gather_facts: false
  vars_files:
  - vars/disruption.yaml
  - vars/auto_generated_preamble.yaml
  - vars/etc.yaml
  - vars/retries.yaml
  roles:
  - role: calico-tigera-operator
    tags:
    - calico

- name: Configure BGP and LBaaS on the gateways
  hosts: gateways
  become: true
  gather_facts: true
  vars_files:
  - vars/auto_generated_preamble.yaml
  - vars/retries.yaml
  roles:
  - role: k8s-bgp
    tags:
    - k8s-bgp
  - role: ch-k8s-lbaas-agent
    tags:
    - ch-k8s-lbaas
    - ch-k8s-lbaas-agent

- name: Configure the local-storage controllers
  hosts: k8s_nodes
  vars_files:
  - vars/auto_generated_preamble.yaml
  - vars/retries.yaml
  roles:
  - role: k8s-local-storage-controller
    tags: lsc
    when: k8s_local_storage_static_enabled
  - role: k8s-local-path-provisioner
    tags: lpp
    when: k8s_local_storage_dynamic_enabled

- name: Configure Nvidia Device Plugin
  hosts: workers
  vars_files:
  - vars/retries.yaml
  roles:
  - role: nvidia-device-plugin
    when: k8s_is_gpu_cluster and not k8s_virtualize_gpu
    tags:
    - gpu-support
    - nvidia-device-plugin

# yahrens: This play resides only transitionally here.
# See https://gitlab.com/yaook/k8s/-/issues/349 for details
- name: Configure vm.max_map_count
  hosts: workers
  gather_facts: false
  tasks:
  - name: Configure vm.max_map_count
    ansible.builtin.import_role:
      name: vm-max-map-count
    when: "vm_max_map_count is defined"
    tags:
    - vm-max-map-count
  - name: Configure fs.inotify
    ansible.builtin.import_role:
      name: fs-inotify
    tags:
    - fs-inotify
...
