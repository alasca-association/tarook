- name: Run the test
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

  block:
  - name: create namespace
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      state: present
      name: "{{ check_services_namespace }}"
      validate:
        fail_on_error: yes
        strict: yes
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: Apply the nginx+service manifest
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'nginx.yaml.j2') }}"
      state: present
      wait: yes
      validate:
        fail_on_error: yes
        strict: yes
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: Check the connection
    uri:
      url: "http://{{ hostvars[gateway]['ansible_host'] }}:{{ deprecated_nodeport_lb_test_port }}"
    register: curl_result
    failed_when: curl_result.status != 200

  - name: Remove the Service
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'nginx.yaml.j2') }}"
      state: absent
      wait: yes
      validate:
        fail_on_error: yes
        strict: yes
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"

  - name: Validate Services for DualStack-Clusters
    when: dualstack_support
    include_tasks: dualstack-services.yaml

  - name: delete namespace
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      state: absent
      name: "{{ check_services_namespace }}"
      wait: true
      validate:
        fail_on_error: yes
        strict: yes
    # Retry this task on failures
    register: k8s_apply
    until: k8s_apply is not failed
    retries: "{{ k8s_error_retries }}"
    delay: "{{ k8s_error_delay }}"
    tags:
    - test-cleanup
