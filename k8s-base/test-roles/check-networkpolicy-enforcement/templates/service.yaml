---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test
  namespace: "{{ check_networkpolicy_namespace }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-deployment
  namespace: "{{ check_networkpolicy_namespace }}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                - key: kubernetes.io/hostname
                  operator: NotIn
                  values:
                  - "{{ inventory_hostname }}"
      securityContext:
        runAsNonRoot: true
        runAsUser: 24635
        runAsGroup: 24635
        fsGroup: 24635
      tolerations:
      - key: ""
        operator: Exists
      containers:
      - name: echo
        image: registry.gitlab.com/yaook/images/k8s-nginx:main
        ports:
        - containerPort: 8080
      serviceAccountName: test
---
kind: Service
apiVersion: v1
metadata:
  name: echo-service
  namespace: "{{ check_networkpolicy_namespace }}"
  annotations:
    service.beta.kubernetes.io/openstack-internal-load-balancer: "false"
spec:
  selector:
    app: echo
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: echo-block
  namespace: "{{ check_networkpolicy_namespace }}"
spec:
  podSelector:
    matchLabels:
      app: echo
  policyTypes:
  - Ingress
  - Egress
  ingress: []
  egress: []
