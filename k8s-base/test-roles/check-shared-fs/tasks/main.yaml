---
- name: show test information
  debug:
    msg: "This test is using the {{ fs_storage_class }} storageClass"

- name: Run the test
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

  block:
  - name: create namespace
    k8s:
      state: present
      api_version: v1
      kind: Namespace
      name: "{{ check_shared_filesystem_namespace }}"
      validate:
        fail_on_error: yes
        strict: yes

  - name: create PVC
    k8s:
      state: present
      definition: "{{ lookup('template', 'pvc.yaml') }}"
      validate:
        fail_on_error: yes
        strict: yes

  - name: start worker pods
    k8s:
      state: present
      definition: "{{ lookup('template', 'pod.yaml') }}"
      validate:
        fail_on_error: yes
        strict: yes
    loop: "{{ test_worker_nodes | map(attribute='name') | list }}"
    register: worker_pods

  - name: fetch worker pod completion state
    k8s_info:
      api_version: v1
      kind: Pod
      name: "shared-fs-test-{{ item.item }}"
      namespace: "{{ check_shared_filesystem_namespace }}"
    register: worker_state
    loop: "{{ worker_pods.results }}"
    until: "worker_state.resources and (worker_state.resources[0].status | default(False)) and (worker_state.resources[0].status.phase | default('') in ['Succeeded', 'Failed'])"
    delay: 5
    retries: 240

  - name: check worker pod success
    debug:
      msg: "Worker pod {{ item.resources[0].metadata.name }} is in condition {{ item.resources[0].status.phase }}"
    failed_when: 'item.resources[0].status.phase == "Failed"'
    loop: "{{ worker_state.results }}"

  - name: delete namespace
    k8s:
      state: absent
      api_version: v1
      kind: Namespace
      name: "{{ check_shared_filesystem_namespace }}"
      wait: true
      validate:
        fail_on_error: yes
        strict: yes
    tags:
    - test-cleanup
