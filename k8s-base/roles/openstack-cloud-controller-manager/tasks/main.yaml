---
- name: Get Cluster information
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  kubernetes.core.k8s_cluster_info:
  register: api_status

- name: Determine the kubernetes minor version
  set_fact:
    kubernetes_minor_version: "{{ api_status['version']['server']['kubernetes']['major'] }}.{{ api_status['version']['server']['kubernetes']['minor'] }}"

- name: Fail if kubernetes version is not supported
  ansible.builtin.fail:
    msg: The kubernetes version "{{ kubernetes_minor_version }}" is not supported.
  when: kubernetes_minor_version not in image_version_map

- name: Determine the Openstack Cloud Controller version to install
  set_fact:
    openstack_cloud_controller_version: "{{ image_version_map[kubernetes_minor_version]['openstack_cloud_controller_manager'] }}"

- name: Print the Openstack Cloud Controller version to install
  debug:
    msg: "{{ openstack_cloud_controller_version }}"

# I guess we can drop this
# - name: Preliminaries
#   block:
#     # Remove me when dropping support for
#     # k8s v1.19, v1.20 & v1.21
#     - name: Include controller manager patch
#       ansible.builtin.include_tasks: patch_controller_manager.yaml
#       when:
#         - kubernetes_minor_version is version('1.22', '<')

- name: Create cloud-config secret
  become: true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  kubernetes.core.k8s:
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      data:
        cloud.conf: "{{ lookup('template', 'os_cloud_config.ini') | b64encode }}"
      metadata:
        name: cloud-config
        namespace: kube-system
    validate:
      fail_on_error: true
      strict: true
  notify:
    - restart CCM
  # Retry this task on failures
  register: k8s_apply
  until: k8s_apply is not failed
  retries: "{{ k8s_error_retries }}"
  delay: "{{ k8s_error_delay }}"

- name: Start the OpenStack Cloud Controller manager
  become: true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  vars:
    template_folder: "{{ ('k8s-v' + kubernetes_minor_version + '/') }}"
  block:
    - name: Deploy the CCM and its RBAC
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ lookup('template', template_folder + 'cloud-controller-manager/rbac/' + item) }}"
        validate:
          fail_on_error: true
          strict: true
      loop:
        - cloud-controller-manager-roles.yaml.j2
        - cloud-controller-manager-role-bindings.yaml.j2
      # Retry this task on failures
      register: k8s_apply
      until: k8s_apply is not failed
      retries: "{{ k8s_error_retries }}"
      delay: "{{ k8s_error_delay }}"

    - name: Deploy Cloud-Controller-Manger
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ lookup('template', template_folder + 'cloud-controller-manager/openstack-cloud-controller-manager-ds.yaml.j2') }}"
        validate:
          fail_on_error: true
          strict: true
      # Retry this task on failures
      register: k8s_apply
      until: k8s_apply is not failed
      retries: "{{ k8s_error_retries }}"
      delay: "{{ k8s_error_delay }}"
...
