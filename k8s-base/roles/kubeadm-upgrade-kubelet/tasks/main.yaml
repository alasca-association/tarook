---
- name: Upgrade kubelet on apt systems
  when: ansible_pkg_mgr == 'apt'
  become: yes
  block:
  - name: Remove the hold of kubelet  # noqa no-changed-when
    ansible.builtin.command: apt-mark unhold kubelet kubectl

  - name: Upgrade kubelet
    ansible.builtin.apt:
      name:
        - "kubelet={{ next_k8s_version }}-00"
        - "kubectl={{ next_k8s_version }}-00"
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Re-hold kubelet  # noqa no-changed-when
    ansible.builtin.command: apt-mark hold kubelet kubectl

- name: Upgrade kubelet on dnf systems
  when: ansible_pkg_mgr == 'dnf'
  become: yes
  block:
  - name: Remove versionlock on kubelet  # noqa no-changed-when
    ansible.builtin.command:
    args:
      argv:
      - dnf
      - versionlock
      - delete
      - kubelet
      - kubectl

  - name: Upgrade kubelet
    ansible.builtin.dnf:
      name:
      - "kubelet-{{ next_k8s_version }}-00"
      - "kubectl-{{ next_k8s_version }}-00"
      state: present
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Add versionlock on kubelet  # noqa no-changed-when
    ansible.builtin.command:
    args:
      argv:
      - dnf
      - versionlock
      - add
      - kubelet
      - kubectl

# Remove me when dropping support for
# k8s v1.19, v1.20, v1.21 & v1.22
- name: Remove featureGates for >= v1.23
  become: yes
  ansible.builtin.lineinfile:
    path: /var/lib/kubelet/config.yaml
    state: absent
    search_string: "IPv6DualStack:"
    owner: root
    group: root
    mode: 0600
  when:
    - next_k8s_version is defined and next_k8s_version is version('1.23', '>=')

- name: Configure and restart kubelet
  ansible.builtin.include_role:
    name: kubelet-configuration
  vars:
    _require_kubelet_restart: True
...
