# These tasks also install calicoctl. calicoctl is currently necessary to configure
# Calico specific resources as the Calico CRDs are not designed to
# be used directly by kubectl. Please refer to the following issue:
# https://github.com/projectcalico/calico/issues/2923
---

- name: Ensure that /opt/cni/bin/ exists
  become: true
  file:
    owner: root
    group: root
    mode: 0750
    recurse: true
    path: /opt/cni/bin/
    state: directory

- name: Calico binaries download for versions prior 3.21.3
  when: image_versions.calico_version is version('3.21.3', '<')
  block:
  - name: Install and configure Calico CNI Plugin binaries
    become: true
    block:
      - name: Install calicoctl
        get_url:
          owner: root
          group: root
          mode: 0750
          url: "{{ calico_calicoctl_binary_source }}/v{{ image_versions.calico_version }}/calicoctl-linux-amd64"
          dest: /usr/local/bin/calicoctl
          checksum: "{{ calicoctl_binary_checksum }}"
        register: task_result
        until: task_result is not failed
        retries: "{{ network_error_retries }}"
        delay: "{{ network_error_delay }}"

      - name: Install calico
        get_url:
          owner: root
          group: root
          mode: 0750
          url: "{{ calico_cni_plugin_binary_source }}/v{{ image_versions.calico_version }}/calico-amd64"
          dest: /opt/cni/bin/calico
          checksum: "{{ calico_binary_checksum }}"

      - name: Install calico-ipam
        get_url:
          owner: root
          group: root
          mode: 0750
          url: "{{ calico_cni_plugin_binary_source }}/v{{ image_versions.calico_version }}/calico-ipam-amd64"
          dest: /opt/cni/bin/calico-ipam
          checksum: "{{ calico_ipam_binary_checksum }}"
        register: task_result
        until: task_result is not failed
        retries: "{{ network_error_retries }}"
        delay: "{{ network_error_delay }}"

- name: Calico binaries download for versions after 3.21.3
  when: image_versions.calico_version is version('3.21.3', '>=')
  delegate_to: localhost
  run_once: true
  block:

  - name: Define Calico download folder # noqa yaml[line-length]
    set_fact:
      calico_cache_dir: "{% if lookup('env', 'XDG_CACHE_HOME') == '' %}{{lookup('env', 'HOME') + '/.cache' + '/yaook-k8s-ansible/calico-binaries'}}{% else %}{{lookup('env', 'XDG_CACHE_HOME')  + '/yaook-k8s-ansible/calico-binaries'}}{% endif %}"

  - name: Check if Calico has been already downloaded
    stat:
      path: "{{ calico_cache_dir }}/release-v{{ image_versions.calico_version }}.tgz"
      checksum_algorithm: sha256
    register: calico_archive_release_file

  - name: Create Calico download folder
    file:
      path: "{{ calico_cache_dir }}"
      state: directory
      mode: 0750

  - name: Download Calico release archive to localhost
    get_url:
      mode: 0750
      url: "{{ calico_release_source }}/v{{ image_versions.calico_version }}/release-v{{ image_versions.calico_version }}.tgz"
      dest: "{{ calico_cache_dir }}"
      checksum: "{{ calico_release_checksum }}"
    async: 240
    poll: 15
    when: not calico_archive_release_file.stat.exists
          and calico_archive_release_file.stat.checksum | default('') != calico_release_checksum
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Extract Calico release archive
    unarchive:
      mode: 0750
      src: "{{ calico_cache_dir }}/release-v{{ image_versions.calico_version }}.tgz"
      include:
        - "release-v{{ image_versions.calico_version }}/bin/calicoctl/calicoctl-linux-amd64"
        - "release-v{{ image_versions.calico_version }}/bin/cni/amd64/calico"
        - "release-v{{ image_versions.calico_version }}/bin/cni/amd64/calico-ipam"
      dest: "{{ calico_cache_dir }}"

- name: Copy Calico binaries to node
  become: true
  copy:
    src: "{{ item.key }}"
    dest: "{{ item.value }}"
    owner: root
    group: root
    mode: 0750
  loop:
    - {key: "{{ calico_cache_dir }}/release-v{{ image_versions.calico_version }}/bin/calicoctl/calicoctl-linux-amd64", value: "/usr/local/bin/calicoctl"}
    - {key: "{{ calico_cache_dir }}/release-v{{ image_versions.calico_version }}/bin/cni/amd64/calico", value: "/opt/cni/bin/calico"}
    - {key: "{{ calico_cache_dir }}/release-v{{ image_versions.calico_version }}/bin/cni/amd64/calico-ipam", value: "/opt/cni/bin/calico-ipam"}
  when: image_versions.calico_version is version('3.21.3', '>=')

- name: Ensure that /etc/cni/net.d/ exists on all k8s_nodes
  become: true
  file:
    owner: root
    group: root
    mode: 0640
    path: /etc/cni/net.d/
    state: directory

# https://docs.projectcalico.org/reference/cni-plugin/configuration#kubernetes-specific
- name: Activate k8s Calico CNI plugin on all nodes
  become: true
  template:
    owner: root
    group: root
    mode: 0600
    src: 10-calico.conflist.j2
    dest: /etc/cni/net.d/10-calico.conflist
...
