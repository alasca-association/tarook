#!/usr/bin/env bash

{{ _auto_generated_preamble }}

# kube* is pinned so we can ignore it
if [[ -f /usr/bin/apt ]]; then # debian system
    upgrades="$(apt list --upgradable 2>/dev/null | sed '/Listing.../d' | sed -E '/kubeadm|kubelet|kubectl/d' | wc -l)"
    security_upgrades="$(apt list --upgradable 2>/dev/null | sed '/Listing.../d' | sed -E '/kubeadm|kubelet|kubectl/d' | grep "-security" | wc -l)"

    if [[ -f '/var/run/reboot-required' ]]; then
        reboot_required=1
    else
        reboot_required=0
    fi
elif [[ -f /usr/bin/yum ]]; then # centos system
    upgrades="$(yum -q check-update | sed '/^[[:space:]]*$/d'  | sed '/Obsoleting Packages/,$d' | wc -l)"
    security_upgrades=${upgrades} # don't know how to filter security updates on CentOS
    needs-restarting -r
    reboot_required=$?
fi

echo "Updating {{ monitoring_node_exporter_textfile_collector_path }}/system_update_status.sh.prom"

cat << EOF > {{ monitoring_node_exporter_textfile_collector_path }}/system_update_status.sh.prom.$$
# HELP node_exporter_upgrades_pending Pending package updates
# TYPE node_exporter_upgrades_pending gauge
node_exporter_upgrades_pending ${upgrades}

# HELP node_exporter_security_upgrades_pending Pending package updates
# TYPE node_exporter_security_upgrades_pending gauge
node_exporter_security_upgrades_pending ${security_upgrades}

# HELP node_exporter_reboot_required Is reboot required? (1=yes,0=no)
# TYPE node_exporter_reboot_required gauge
node_exporter_reboot_required ${reboot_required}
EOF

mv {{ monitoring_node_exporter_textfile_collector_path }}/system_update_status.sh.prom.$$ {{ monitoring_node_exporter_textfile_collector_path }}/system_update_status.sh.prom
