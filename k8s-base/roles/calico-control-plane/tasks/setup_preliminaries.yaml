# If you plan to upgrade calico resources:
# curl https://docs.projectcalico.org/manifests/calico.yaml -O
# Make sure to only apply the CustomResourceDefinitions
---
- name: Create Custom Calico Resource Definitions
  become: true
  run_once: true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  vars:
    crd_file: "{{ 'crds/calico-crds-v%s.yaml' | format(image_versions.calico_version) }}"
  kubernetes.core.k8s:
    definition: "{{ lookup('file', crd_file) }}"
    apply: true
    state: present
    validate:
      fail_on_error: true
      strict: true
  # Retry this task on failures
  register: k8s_apply
  until: k8s_apply is not failed
  retries: "{{ k8s_error_retries }}"
  delay: "{{ k8s_error_delay }}"

- name: Check local presence of calico-kubeconfig certificate
  run_once: true
  block:
  - name: Check if calico-kubeconfig private key is locally present
    delegate_to: localhost
    ansible.builtin.stat:
      path: "{{ calico_cni_key_path }}"
    register: calico_cni_key_local

  - name: Check if calico-kubeconfig signed certificate is locally present
    delegate_to: localhost
    ansible.builtin.stat:
      path: "{{ calico_cni_crt_path }}"
    register: calico_cni_crt_local

  - name: Fail if certificate but private key does not exist for calico-kubeconfig
    ansible.builtin.fail:
      msg: "### WARNING ###\nThe certificate of calico-kubeconfig is locally present, but not the private key!"
    when: calico_cni_crt_local.stat.exists and not calico_cni_key_local.stat.exists

- name: Validate local calico-kubeconfig crt on expiration
  run_once: true
  when: calico_cni_crt_local.stat.exists
  block:
  - name: Collect expiration information of the calico-kubeconfig crt
    delegate_to: localhost
    community.crypto.x509_certificate_info:
      path: "{{ calico_cni_crt_path }}"
      valid_at:
        point_1: "+104w"
        point_2: "+52w"
    register: calico_cni_crt_valid

  # ToDo send a notification
  - name: Warn if the calico-kubeconfig crt expires in less than 2 years from now
    ansible.builtin.debug:
      msg: "### WARNING ###\nThe calico-kubeconfig certificate expires in less than 2 years from now"
    when: not calico_cni_crt_valid.valid_at.point_1

  - name: Warn if the calico-kubeconfig crt expires in less than 1 year from now
    ansible.builtin.debug:
      msg: "### WARNING ###\nThe calico-kubeconfig certificate expires in less than 1 year from now"
    when: not calico_cni_crt_valid.valid_at.point_2

- name: Manage calico-kubeconfig private key
  run_once: true
  become: false
  block:
  - name: Regenerate (force) private key of calico-kubeconfig if it is short to expire
    when: not (calico_cni_crt_valid.valid_at.point_2 | default('false'))
    delegate_to: localhost
    community.crypto.openssl_privatekey:
      path: "{{ calico_cni_crt_path }}"
      mode: 0600
      size: 4096
      force: true

  - name: Generate private key for CA certificate of calico-kubeconfig
    delegate_to: localhost
    community.crypto.openssl_privatekey:
      mode: 0600
      path: "{{ calico_cni_key_path }}"
      size: 4096

  - name: Generate Certificate Signing Request for calico-kubeconfig
    delegate_to: localhost
    community.crypto.openssl_csr:
      mode: 0664
      path: "{{ calico_cni_csr_path }}"
      privatekey_path: "{{ calico_cni_key_path }}"
      common_name: calico-cni
      subject:
        CN: calico-cni

  - name: Sign the Certificate Signing Request for calico-kubeconfig
    delegate_to: localhost
    community.crypto.x509_certificate:
      mode: 0664
      path: "{{ calico_cni_crt_path }}"
      csr_path: "{{ calico_cni_csr_path }}"
      ownca_path: "{{ own_ca_crt_path }}"
      ownca_privatekey_path: "{{ own_ca_key_path }}"
      entrust_not_after: "+3653d"
      provider: ownca

- name: Create user for calico-cni, configure RBAC and create RoleBinding
  become: true
  run_once: true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  kubernetes.core.k8s:
    definition: "{{ lookup('file', item) }}"
    apply: true
    state: "present"
    validate:
      fail_on_error: true
      strict: true
  loop:
  - "{{ calico_versions_folder }}/calico-cni-user.yaml"
  # Retry this task on failures
  register: k8s_apply
  until: k8s_apply is not failed
  retries: "{{ k8s_error_retries }}"
  delay: "{{ k8s_error_delay }}"
...
