- name: Ensure /etc/docker directory is present
  become: yes
  file:
    path: /etc/docker
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Install docker CE (apt)
  become: yes
  apt:
    state: present
    name:
      - docker.io
  register: task_result
  until: task_result.failed == false
  retries: "{{ network_error_retries }}"
  delay: "{{ network_error_delay }}"
  when:
  - ansible_pkg_mgr == 'apt'

- name: Install docker CE (yum/dnf)
  become: yes
  when:
  - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
  block:
  # TODO: test without
  - name: Install pre-requisites to docker
    yum:
      name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    register: task_result
    until: task_result.failed == false
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Add Docker repo
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo
    register: task_result
    until: task_result.failed == false
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Install docker
    yum:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io

- name: Install docker nvidia runtime
  become: yes
  vars:
    # This value is the concatenation of the fields $ID and $VERSION_ID in /etc/os-release,
    # e.g., `ubuntu18.04`.
    # I think it's a bad idea to simply source these fields so let's follow a different
    # path.
    distribution: "{{ (ansible_distribution | lower) }}{{ansible_distribution_version }}"
  when:
    - k8s_is_gpu_cluster | default(False)
    - has_gpu
    - ansible_facts['pkg_mgr'] == "apt"
  block:
    - name: Add nvidia's repo key
      apt_key:
        url: https://nvidia.github.io/nvidia-docker/gpgkey
        state: present
      register: task_result
      until: task_result.failed == false
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"

    - name: Add nvidia-docker2 repositories
      apt_repository:
        # Don't update on each item
        update_cache: false
        repo: "{{ item }}"
      register: task_result
      until: task_result.failed == false
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"
      loop:
        - "deb https://nvidia.github.io/libnvidia-container/stable/{{ distribution }}/$(ARCH) /"
        - "deb https://nvidia.github.io/nvidia-container-runtime/stable/{{ distribution }}/$(ARCH) /"
        - "deb https://nvidia.github.io/nvidia-docker/{{ distribution }}/$(ARCH) /"

    - name: Install nvidia-docker2 package
      apt:
        name: nvidia-docker2
        update_cache: yes
      register: task_result
      until: task_result.failed == false
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"

- name: Create docker daemon configuration
  become: yes
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0640
  notify: Restart docker

- name: Create docker proxy configuration
  become: yes
  when: (cluster_behind_proxy | default(false))
  block:
    - name: Ensure directory docker service directory is present
      become: yes
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Create docker service extension
      become: yes
      template:
        src: http-proxy.conf.j2
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
        owner: root
        group: root
        mode: 0640
      notify: Restart docker

- name: Trigger the handlers
  meta: flush_handlers
