---
- name: create user
  become: true
  ansible.builtin.user:
    system: true
    name: "{{ prometheus_keepalived_exporter_user }}"
    home: /dev/null
    create_home: false

- name: "[Legacy] Remove residual files from /tmp"
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
  - "/tmp/keepalived_exporter-{{ prometheus_keepalived_exporter_version }}-amd64.tar.gz"
  - "/tmp/keepalived_exporter-{{ prometheus_keepalived_exporter_version }}-amd64"

- name: Create configuration directory
  become: true
  ansible.builtin.file:
    state: directory
    path: /etc/prometheus-keepalived-exporter
    owner: root
    group: root
    mode: u=rwx,g=rx,o-rwx

- name: Store id tag
  become: true
  ansible.builtin.template:
    src: archive_id_tag
    dest: /etc/prometheus-keepalived-exporter/version
    owner: root
    group: root
    mode: ugo-rwx
  register: version

- name: Fetch and install binary
  become: true
  vars:
    pke_path: /var/cache/prometheus-keepalived-exporter
  block:
  - name: Create caching directory for the archive/binary
    ansible.builtin.file:
      state: directory
      path: "{{ pke_path }}"
      owner: root
      group: root
      mode: u=rwx,g=rx,o-rwx

  - name: Download executable
    ansible.builtin.get_url:
      checksum: "{{ prometheus_keepalived_exporter_checksums[prometheus_keepalived_exporter_version] }}"
      dest: "{{ pke_path }}"
      url: "{{ prometheus_keepalived_exporter_url }}"
      force: "{{ (version is changed) | ternary(True, False) }}"
      owner: root
      group: root
      mode: ugo-rx
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Extract binary
    ansible.builtin.unarchive:
      src: "{{ pke_path }}/keepalived_exporter-{{ prometheus_keepalived_exporter_version }}-amd64.tar.gz"
      dest: "{{ pke_path }}"
      remote_src: true

  - name: Install binary to /usr/local/bin
    ansible.builtin.copy:
      src: "{{ pke_path }}/keepalived_exporter-{{ prometheus_keepalived_exporter_version }}-amd64/keepalived_exporter"
      dest: /usr/local/bin
      owner: keepalived-exporter
      mode: u=rx,go-rwx
      remote_src: true
    register: pke_binary

  - name: Set capabilities
    community.general.capabilities:
      path: /usr/local/bin/keepalived_exporter
      capability: "{{ item }}"
      state: present
    with_items:
    - cap_dac_read_search+ep
    - cap_kill+ep
    - cap_net_admin+ep

- name: Activate ip_vs kernel module
  become: true
  community.general.modprobe:
    name: ip_vs
    state: present

- name: Create a systemd unit for keepalived_exporter
  become: true
  ansible.builtin.copy:
    src: "{{ role_path }}/files/prometheus-keepalived-exporter.service"
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 0640
  register: pke_unit

- name: Start & enable the systemd unit
  become: true
  ansible.builtin.systemd:
    name: prometheus-keepalived-exporter
    state: "{{ ((pke_binary is changed) or (pke_unit is changed)) | ternary('restarted', 'started') }}"
    enabled: true
    daemon-reload: true
...
