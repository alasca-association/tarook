{{ _auto_generated_preamble }}

apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
nodeRegistration:
  kubeletExtraArgs:
{% if on_openstack %}
    cloud-provider: "external"
{% endif %}
{% if dualstack_support %}
    node-ip: {{ [local_ipv4_address, local_ipv6_address] | join(",") | to_json }}
{% else %}
    node-ip: {{ local_ipv4_address | to_json }}
{% endif %}
{% set labels = k8s_node_labels[inventory_hostname] | default([]) %}
{% if labels %}
    node-labels: {{ labels | join(",") | to_json }}
{% endif %}
  name: {{ inventory_hostname }}
{% set taints = k8s_node_taints[inventory_hostname] | default(false) %}
{% if taints != false %}
  taints:
{% for taint in taints %}
{% set taint_parts = taint.split(":", 1) %}
{% set kv_parts = taint_parts[0].split("=", 1) %}
  - key: {{ kv_parts[0] | to_json }}
{% if kv_parts | length > 1 %}
    value: {{ kv_parts[1] | to_json }}
{% endif %}
    effect: {{ taint_parts[1] | default("NoExecute") | to_json }}
{% endfor %}

{% endif %}

localAPIEndpoint:
  advertiseAddress: {{ local_ipv4_address | to_json }}
  bindPort: 6443

---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: "v{{ k8s_version }}"
controlPlaneEndpoint: "{{ networking_fixed_ip }}:{{ k8s_apiserver_frontend_port }}"
networking:
{% if dualstack_support %}
  podSubnet: {{ [k8s_network_pod_subnet, k8s_network_pod_subnet_v6] | join(",") | to_json }}
  serviceSubnet: {{ [k8s_network_service_subnet, k8s_network_service_subnet_v6] | join(",") | to_json }}
{% else %}
  podSubnet: {{ k8s_network_pod_subnet | to_json }}
  serviceSubnet: {{ k8s_network_service_subnet | to_json }}
{% endif %}

apiServer:
  extraArgs:
    service-account-issuer: kubernetes.default.svc
    service-account-signing-key-file: /etc/kubernetes/pki/sa.key
    enable-admission-plugins: NodeRestriction

controllerManager:
    extraArgs:
      bind-address: "0.0.0.0"
      large-cluster-size-threshold: "{{ k8s_controller_manager_large_cluster_size_threshold | default(50) }}"

scheduler:
    extraArgs:
      "bind-address" : "0.0.0.0"

featureGates:
# remove it when we do not support < v1.23
# enabled by default since v1.21
{% if k8s_version is version('1.23', '<') %}
{% if dualstack_support %}
  IPv6DualStack: true
{% else %}
  IPv6DualStack: false
{% endif %}
{% endif %}

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
metricsBindAddress: "0.0.0.0:10249"
{% if dualstack_support %}
mode: ipvs
{% endif %}

---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd
