#!/usr/bin/env bash
{{ _auto_generated_preamble }}
set -euo pipefail
umask 0700
function revoke() {
    if test -n "${token:-}"; then
        VAULT_TOKEN="$token" vault token revoke -self
    fi
}
trap revoke EXIT
token="$({{ k8s_continuous_join_key_vault_token_script }})"
k8s_token="$(kubeadm token create)"
k8s_ca_cert_hash="sha256:$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //')"
# This command line is desperately trying to keep the secret out of `ps` output.
# `jq --slurp -R` is really useful for that, because it provides the input as
# array of strings, one line each. Luckily, none of the inputs can contain a
# newline, so this does the trick.
version="$(jq --slurp -R '(. / "\n") | {"token": .[0], "ca_cert_hash": .[1], "publisher": .[2]}' <<<"$k8s_token"$'\n'"$k8s_ca_cert_hash"$'\n'"$(hostname)" | VAULT_TOKEN="$token" vault kv put -field=version {{ k8s_continuous_join_key_vault_path | quote }} -)"
printf 'Join key written as version %s\n' "$version"
