---
- name: Load admin credentials into interactive shells
  become: true
  ansible.builtin.template:
    src: kubernetes-admin.sh.j2
    dest: /etc/profile.d/kubernetes-admin.sh
    owner: root
    group: root
    mode: u=rw,go=r

- name: Check reachability of local kube-apiserver
  ansible.builtin.wait_for:
    port: 6443
    timeout: 5
  ignore_errors: true
  register: local_kube_apiserver_status

- name: Check reachability of load-balanced kube-apiserver
  when: local_kube_apiserver_status is failed
  vars:
    host: "{{ networking_fixed_ip }}:{{ k8s_apiserver_frontend_port }}"
  ansible.builtin.uri:
    url: "https://{{ host }}"
    status_code: 403
    validate_certs: false  # self-signed certificate
    timeout: 3
  register: lb_kube_apiserver_status
  until: lb_kube_apiserver_status.status == 403
  retries: 3
  ignore_errors: true

- name: Make sure 'etc_dir' exists
  delegate_to: localhost
  become: false
  ansible.builtin.file:
    path: "{{ etc_dir }}"
    state: directory
    mode: 0755

- name: Create parent directories for PKI directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,go=rx
  loop:
  - /etc/kubernetes
  - /var/lib/kubelet

# The focus of the following two tasks is on fixing the permissions.
- name: Create PKI directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,go-rwx
  loop:
  - /etc/kubernetes/pki
  - /etc/kubernetes/pki/etcd
  - /var/lib/kubelet/pki

- name: Obtain CAs
  include_tasks: obtain-cas.yaml

- name: Obtain kubeconfigs
  include_tasks: obtain-kubeconfigs.yaml

- name: Obtain certificates
  include_tasks: obtain-certs.yaml

- name: Delete secret data which is now in Vault
  become: true
  ansible.builtin.file:
    state: absent
    path: /etc/kubernetes/pki/{{ item }}
  loop:
  - ca.key
  - front-proxy-ca.key
  - etcd/ca.key

- name: Ensure kube-controller-manager client cert flags are unset
  become: true
  when: local_kube_apiserver_status is not failed
  block:
  - name: Ensure cluster-signing-cert-file is unset
    ansible.builtin.replace:
      path: /etc/kubernetes/manifests/kube-controller-manager.yaml
      regexp: '^(\s*-\s*--cluster-signing-cert-file=).*'
      replace: '\1'

  - name: Ensure --cluster-signing-key-file is unset
    ansible.builtin.replace:
      path: /etc/kubernetes/manifests/kube-controller-manager.yaml
      regexp: '^(\s*-\s*--cluster-signing-key-file=).*'
      replace: '\1'

- name: Ensure that /var/lib/etcd exists
  become: true
  ansible.builtin.file:
    path: /var/lib/etcd
    state: directory
    mode: u=rwx,go-rwx

- name: Spawn K8s cluster with 'kubeadm init'
  when: "local_kube_apiserver_status is failed and lb_kube_apiserver_status is failed"
  tags:
  - spawn
  become: true
  block:
  - name: Pull config images used by kubeadm from registry.k8s.io  # noqa no-changed-when
    ansible.builtin.command: kubeadm config images pull --kubernetes-version {{ k8s_version }}

  - name: Create kubeadm-init-config.yaml
    vars:
      gateway: "{{ groups['gateways'] | first }}"
    ansible.builtin.template:
      src: kubeadm-init-config.yaml.j2
      dest: /tmp/kubeadm-init-config.yaml
      owner: root
      group: root
      mode: 0600

  - name: Run kubeadm init  # noqa no-changed-when
    # XXX: ansible command module does not support setting the umask
    ansible.builtin.shell: umask 077 && kubeadm init --node-name={{ inventory_hostname | quote }} --config=/tmp/kubeadm-init-config.yaml

  - name: Remove kubeadm-init-config.yaml
    ansible.builtin.file:
      path: /tmp/kubeadm-init-config.yaml
      state: absent

  - name: Configure bridge-nf-call-iptables
    ansible.posix.sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

- name: Join the K8s control plane
  when: "local_kube_apiserver_status is failed and not lb_kube_apiserver_status is failed"
  become: true
  environment:
    ANSIBLE_HASHI_VAULT_URL: "{{ lookup('env', 'VAULT_ADDR') }}"
    ANSIBLE_HASHI_VAULT_CA_CERT: "{{ lookup('env', 'VAULT_CACERT') }}"
  block:
  - name: Get certificate information
    community.crypto.x509_certificate_info:
      path: "/etc/kubernetes/pki/ca.crt"

  - name: Create kubeadm-join-config.yaml
    ansible.builtin.template:
      src: kubeadm-join-config.yaml.j2
      dest: /tmp/kubeadm-join-config.yaml
      owner: root
      group: root
      mode: 0600

  - name: Join the existing cluster as another control plane node  # noqa no-changed-when
    # XXX: ansible command module does not support setting the umask
    ansible.builtin.shell: "umask 077 && kubeadm join --config=/tmp/kubeadm-join-config.yaml"

  - name: Remove kubeadm-join-config.yaml
    ansible.builtin.file:
      path: /tmp/kubeadm-join-config.yaml
      state: absent

- name: Provide CA certificates as ConfigMap
  include_tasks: provide-ca-as-cm.yaml
...
