apiVersion: kubeadm.k8s.io/v1beta2
kind: JoinConfiguration
nodeRegistration:
  kubeletExtraArgs:
{% if on_openstack %}
    cloud-provider: "external"
{% endif %}
{% if dualstack_support %}
    node-ip: {{ [local_ipv4_address, local_ipv6_address] | join(",") | to_json }}
{% else %}
    node-ip: {{ local_ipv4_address | to_json }}
{% endif %}
{% set labels = k8s_node_labels[inventory_hostname] | default([]) %}
{% if node_has_gpu and k8s_is_gpu_cluster and not k8s_virtualize_gpu %}
{{ labels.append("yk8s-use-gpu=true") }}
{% endif %}
{% if labels %}
    node-labels: {{ labels | join(",") | to_json }}
{% endif %}
  name: {{ inventory_hostname }}
{% set taints = k8s_node_taints[inventory_hostname] | default([]) %}
{% if node_has_gpu and k8s_is_gpu_cluster and not k8s_virtualize_gpu %}
{{ taints.append("yk8s-use-gpu=true:NoSchedule") }}
{% endif %}
{% if taints %}
  taints:
{% for taint in taints %}
{% set taint_parts = taint.split(":", 1) %}
{% set kv_parts = taint_parts[0].split("=", 1) %}
  - key: {{ kv_parts[0] | to_json }}
{% if kv_parts | length > 1 %}
    value: {{ kv_parts[1] | to_json }}
{% endif %}
    effect: {{ taint_parts[1] | default("NoExecute") | to_json }}
{% endfor %}
{% endif %}

discovery:
  bootstrapToken:
    apiServerEndpoint: {{ networking_fixed_ip }}:{{ k8s_apiserver_frontend_port }}
    token: {{ kubeadm_join_token }}
    caCertHashes:
    - "sha256:{{ ca_cert['public_key_fingerprints']['sha256'] | replace(':', '') }}"
  timeout: 5m0s
