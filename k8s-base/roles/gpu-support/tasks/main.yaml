# A GPU has been detected
---
- name: Install GPU drivers
  become: true
  when:
    - k8s_is_gpu_cluster | default(False)
    - has_gpu
    - _allow_disruption or install_status == 'k8s_not_installed'
    - ansible_facts['pkg_mgr'] == "apt"
  block:
    - name: Install deps for the nvidia drivers
      ansible.builtin.apt:
        state: present
        name:
          - "linux-headers-{{ ansible_kernel }}"
      register: task_result
      until: task_result is not failed
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"

    - name: Ensure keyrings directory exists
      # ftr: this is present by default on Debian...
      ansible.builtin.file:
        state: directory
        path: /etc/apt/keyrings
        owner: root
        group: root
        mode: u=rwx,go=rx

    - name: Deploy Google's K8s repository key
      ansible.builtin.copy:
        src: apt-keyrings-nvidia.gpg
        dest: /etc/apt/keyrings/nvidia.gpg
        owner: root
        group: root
        mode: u=rw,go=r

    - name: Add repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/nvidia.gpg] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /
        state: present
        update_cache: true
      register: task_result
      until: task_result is not failed
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"

    - name: Install driver
      ansible.builtin.apt:
        update_cache: false
        install_recommends: false
        autoremove: true
        name:
          - nvidia-headless-450
          - nvidia-utils-450
      register: installed_driver
      until: installed_driver is not failed
      retries: "{{ network_error_retries }}"
      delay: "{{ network_error_delay }}"

    - name: Blacklist nouveau
      # The installation script lies! It says: """
      # update-initramfs: deferring update (trigger activated)
      # A modprobe blacklist file has been created at /etc/modprobe.d to prevent Nouveau
      # from loading. This can be reverted by deleting the following file:
      # /etc/modprobe.d/nvidia-graphics-drivers.conf"""
      # And guess what? That configuration file doesn't exist!
      ansible.builtin.copy:
        dest: /etc/modprobe.d/blacklist_nouveau.conf
        content: |
          {{ _auto_generated_preamble }}
          blacklist nouveau
          options nouveau modeset=0
        mode: 0755
        owner: root
        group: root
      register: blacklisted_nouveau

    - name: Update initramfs  # noqa no-changed-when no-handler
      ansible.builtin.command: "update-initramfs -k {{ ansible_kernel }} -uv"
      when: blacklisted_nouveau.changed or installed_driver.changed
      register: ramfs

    - name: Reboot block (gpu)  # noqa no-handler
      when: ramfs.changed
      block:

        - name: Reboot the system  # noqa no-changed-when
          ansible.builtin.command:
            argv:
              - reboot
              - now
          when: ansible_connection == 'local'

        - name: Reboot the system
          ansible.builtin.reboot:

    - name: Basic sanity check with nvidia-smi
      # nvidia-smi -L lists all detected cards.
      # I installed the toolchain on a host with any nvidia cards and the rc was != 0.
      # It's therefore safe to assume that if the installation somehow failed, then this task would fail too.
      changed_when: false
      ansible.builtin.command: nvidia-smi -L
...
