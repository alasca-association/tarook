---
- name: Install GPU drivers
  become: true
  when: node_has_gpu
  block:
  # https://docs.nvidia.com/datacenter/cloud-native/kubernetes/k8s-containerd.html#disable-nouveau
  - name: Blacklist Nouveau driver
    ansible.builtin.copy:
      dest: /etc/modprobe.d/blacklist_nouveau.conf
      content: |
        {{ _auto_generated_preamble }}
        blacklist nouveau
        options nouveau modeset=0
      mode: 0755
      owner: root
      group: root
    register: blacklisted_nouveau

  - name: Install deps for the nvidia drivers
    ansible.builtin.apt:
      state: present
      name:
      - "linux-headers-{{ ansible_kernel }}"
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Ensure keyrings directory exists
    # ftr: this is present by default on Debian...
    ansible.builtin.file:
      state: directory
      path: /etc/apt/keyrings
      owner: root
      group: root
      mode: u=rwx,go=rx

  - name: Deploy nvidia cuda driver repository key
    ansible.builtin.copy:
      src: nvidia-cuda-driver.gpg
      dest: /etc/apt/keyrings/nvidia-cuda-driver.gpg
      owner: root
      group: root
      mode: u=rw,go=r

  - name: Add nvidia cuda repository
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/nvidia-cuda-driver.gpg] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /
      state: present
      update_cache: true
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Install nvidia cuda drivers
    ansible.builtin.apt:
      update_cache: false
      install_recommends: false
      autoremove: true
      name:
      - nvidia-headless-530
      - nvidia-utils-530
    register: installed_driver
    until: installed_driver is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"

  - name: Update initramfs  # noqa no-changed-when no-handler
    ansible.builtin.command: "update-initramfs -k {{ ansible_kernel }} -uv"
    when: blacklisted_nouveau.changed or installed_driver.changed
    register: ramfs

  - name: Reboot block (gpu)  # noqa no-handler
    when: ramfs.changed
    block:
    - name: Reboot the system  # noqa no-changed-when
      ansible.builtin.command:
        argv:
        - reboot
        - now
      when: ansible_connection == 'local'

    - name: Reboot the system
      ansible.builtin.reboot:
...
