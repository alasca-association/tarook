- name: Preliminaries
  block:
    # Remove me when dropping support for
    # k8s v1.18, v1.19, v1.20 & v1.21
    - name: Include controller manager patch
      include_tasks: patch_controller_manager.yaml
      when:
        - k8s_version_minor is version('1.22', '<')

- name: Create cloud-config secret
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  k8s:
    apply: yes
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      data:
        cloud.conf: "{{ lookup('template', 'os_cloud_config.ini') | b64encode }}"
      metadata:
        name: cloud-config
        namespace: kube-system
    validate:
      fail_on_error: yes
      strict: yes
  notify:
  - restart CCM

- name: Start the OpenStack Cloud Controller manager
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  vars:
    template_folder: "{{ ('k8s-v' + k8s_version_minor + '/') }}"
  block:
    - name: Prepare PodSecurityPolicy configuration
      k8s:
        state: "{{ k8s_use_podsecuritypolicies | ternary('present', 'absent') }}"
        apply: yes
        definition: "{{ lookup('file', 'psp.yaml') }}"
        validate:
          fail_on_error: yes
          strict: yes

    # https://github.com/kubernetes/cloud-provider-openstack/blob/8ea8cfb8321246d3f05fcbedab668aa330028575/docs/openstack-cloud-controller-manager/using-openstack-cloud-controller-manager.md
    - name: Deploy RBAC resources of CCM
      k8s:
        state: present
        apply: yes
        definition: "{{ lookup('template', template_folder + 'cloud-controller-manager/rbac/' + item) }}"
        validate:
          fail_on_error: yes
          strict: yes
      loop:
        - cloud-controller-manager-roles.yaml.j2
        - cloud-controller-manager-role-bindings.yaml.j2

    - name: Deploy Cloud-Controller-Manger
      k8s:
        state: present
        apply: yes
        definition: "{{ lookup('template', template_folder + 'cloud-controller-manager/openstack-cloud-controller-manager-ds.yaml.j2') }}"
        validate:
          fail_on_error: yes
          strict: yes

    - name: Start the Cinder CSI driver plugin
      k8s:
        state: present
        apply: yes
        definition: "{{ lookup('template', item) }}"
        validate:
          fail_on_error: yes
          strict: yes
      # loop over all template-files in the respective directory
      # the number/names of template-files may differ between versions
      with_fileglob:
      - "templates/{{ template_folder }}cinder-csi-plugin/*.yaml.j2"

    - name: Create cinder storage class (hdd)
      k8s:
        state: present
        apply: yes
        definition: "{{ lookup('file', 'cinder/cinder_storage_class.yaml') }}"
        validate:
          fail_on_error: yes
          strict: yes

    - name: Create cinder storage class (nvme)
      when: openstack_cinder_nvme
      k8s:
        state: present
        apply: yes
        definition: "{{ lookup('file', 'cinder/cinder_nvme_storage_class.yaml') }}"
        validate:
          fail_on_error: yes
          strict: yes

- name: Start the Octavia Ingress Controller
  when: openstack_lbaas_ingress
  become: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  tags:
  - openstack-lbaas
  block:
    - name: Configure Ingress Controller
      k8s:
        apply: yes
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          data:
            octavia-ingress-controller-config.yaml: "{{ lookup('template', 'octavia-ingress-controller/config.yaml') | b64encode }}"
          metadata:
            name: octavia-ingress-controller-config
            namespace: kube-system
        state: present
        validate:
          fail_on_error: yes
          strict: yes
      notify:
      - restart octavia-ingress-controller

    - name: Deploy Ingress Controller
      k8s:
        apply: yes
        state: present
        definition: "{{ lookup('template', item) }}"
        validate:
          fail_on_error: yes
          strict: yes
      loop:
      - octavia-ingress-controller/rbac.yaml
      - octavia-ingress-controller/controller.yaml
