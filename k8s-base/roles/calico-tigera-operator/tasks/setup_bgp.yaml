# This task uses calicoctl. This is currently necessary to configure
# Calico specific resources as the Calico CRDs are not designed to
# be used directly by kubectl. Please refer to the following issue:
# https://github.com/projectcalico/calico/issues/2923
---
- name: Create calico BGP configuration and apply peering
  become: true
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
    DATASTORE_TYPE: kubernetes
  block:
  - name: BGP - Apply default calico BGP configuration
    ansible.builtin.command:
      argv:
      - /usr/local/bin/calicoctl
      - apply
      - --filename=-
      stdin: '{{ lookup("template", "bgp.yaml.j2") }}'
    register: bgp_configuration_result
    changed_when: "'Successfully applied' and 'BGPConfiguration' in bgp_configuration_result.stdout"

  # By adding a routeReflectorClusterID to the node, calico/node recognizes that it is a route reflector
  - name: BGP - Mark the k8s masters as route reflectors
    ansible.builtin.command:
      argv:
      - /usr/local/bin/calicoctl
      - patch
      - node
      - "{{ item }}"
      - -p
      # A leading whitespace is needed to prevent Ansible from interpreting this string as JSON
      - ' {"spec":{"bgp":{"routeReflectorClusterID": {{ k8s_network_calico_bgp_router_id | to_json }} }}}'
    register: bgp_route_reflector_cluster_id_patch
    changed_when: "'Successfully patched' and 'Node' in bgp_route_reflector_cluster_id_patch.stdout"
    with_items: "{{ groups['masters'] }}"

  # Labeling the masters easies identification
  - name: BGP - Label the k8s masters as route reflectors
    ansible.builtin.command:
      argv:
      - /usr/local/bin/calicoctl
      - label
      - nodes
      - "{{ item }}"
      - route-reflector=true
    register: bgp_label_masters
    changed_when: "'Successfully updated label route-reflector on nodes' in bgp_label_masters.stdout"
    with_items: "{{ groups['masters'] }}"
...
