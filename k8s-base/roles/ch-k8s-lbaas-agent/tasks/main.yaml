---
- name: Deploy LBaaS agent
  when: ch_k8s_lbaas_enabled

  block:
  - name: Create user
    ansible.builtin.user:
      system: yes
      name: "{{ ch_k8s_lbaas_agent_user }}"
      home: /dev/null
      shell: /bin/false

  - name: Create configuration directory
    ansible.builtin.file:
      state: directory
      owner: root
      group: "{{ ch_k8s_lbaas_agent_user }}"
      mode: u=rwx,g=rx,o-rwx
      path: /etc/ch-k8s-lbaas-agent

  # This is used to avoid having to re-download the binary from the source
  # all the time. This task will be "changed" whenever the URL or checksum
  # passed to the get_url module below changes, allowing to force a
  # re-download exactly when necessary.
  - name: Store id tag
    ansible.builtin.template:
      src: binary_id_tag
      dest: /etc/ch-k8s-lbaas-agent/version
      owner: root
      group: root
      mode: ugo-rwx
    register: version

  - name: Download executable
    ansible.builtin.get_url:
      url: "{{ ch_k8s_lbaas_agent_binary_url }}"
      checksum: "{{ ch_k8s_lbaas_agent_binary_checksum }}"
      dest: /usr/local/bin/ch-k8s-lbaas-agent
      force: "{{ (version is changed) | ternary(True, False) }}"
      owner: root
      group: root
      mode: ugo=rx
    register: task_result
    until: task_result is not failed
    retries: "{{ network_error_retries }}"
    delay: "{{ network_error_delay }}"
    notify:
    - restart ch-k8s-lbaas-agent

  - name: Configure service
    ansible.builtin.template:
      src: agent-config.toml
      dest: /etc/ch-k8s-lbaas-agent/config.toml
      owner: root
      group: "{{ ch_k8s_lbaas_agent_user }}"
      mode: u=rw,g=r,o-rwx
    notify:
    - restart ch-k8s-lbaas-agent

  - name: Configure sudoers
    ansible.builtin.template:
      src: sudoers
      dest: /etc/sudoers.d/lbaas
      owner: root
      group: root
      mode: u=rw,go=r
      validate: /usr/sbin/visudo -cf %s

  - name: Define service
    ansible.builtin.template:
      src: ch-k8s-lbaas-agent.service
      dest: /etc/systemd/system/
      owner: root
      group: root
      mode: u=rw,go=r
    register: agent_service
    notify:
    - restart ch-k8s-lbaas-agent

  - name: Start service
    ansible.builtin.systemd:
      name: ch-k8s-lbaas-agent
      daemon_reload: "{{ agent_service is changed }}"
      state: started
      enabled: yes

  # Need to do that *after* the service is started, because systemd creates the
  # /var/lib/ch-k8s-lbaas-agent/nftables directory.
  - name: Configure firewall for agent access
    ansible.builtin.template:
      src: nftables.conf.j2
      dest: /var/lib/ch-k8s-lbaas-agent/nftables/access.conf
      owner: root
      group: root
      mode: "u=rw,go=r"
    notify: reload nftables

- name: Disable LBaaS agent
  when: not ch_k8s_lbaas_enabled
  block:
  - name: Detect LBaaS agent # noqa 303
    ansible.builtin.command:
    args:
      argv:
      - systemctl
      - is-active
      - ch-k8s-lbaas-agent
    register: agent_detect
    failed_when: false
    changed_when: "{{ agent_detect.rc == 0 }}"

  - name: Disable LBaaS agent
    ansible.builtin.service:
      name: ch-k8s-lbaas-agent
      state: stopped
      enabled: no
    when: agent_detect is changed

  - name: Remove firewall hole for agent access
    ansible.builtin.file:
      state: absent
      path: /var/lib/ch-k8s-lbaas-agent/nftables/access.conf
    notify: reload nftables
...
